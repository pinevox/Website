{"version":3,"sources":["util/axiosConfig.js","uservalidation.js","components/RegSupplier.jsx","components/LoginRegisterMenu.jsx","components/RoleNavbar.jsx","components/Product.jsx","components/TopSlider.jsx","util/Loading.js","components/AllProducts.jsx","components/TopNavbar.jsx","components/NavBar.jsx","components/ProgressBar.jsx","components/RegCustomer.jsx","loginvalidation.js","components/AdminProfile.jsx","components/SellerLogin.jsx","components/CustomerLogin.jsx","components/MyProducts.jsx","components/ProfileSection.jsx","components/MyOrders.jsx","components/BillingSection.jsx","components/CustomerProfile.jsx","components/Orders.jsx","components/ViewCart.jsx","components/ForgotPassword.jsx","components/Footer.jsx","components/Address.jsx","components/Configuration.jsx","util/ProtectedRoutes.jsx","components/Billing.jsx","components/PaymentFailure.jsx","components/PaymentSuccess.jsx","components/ResetPassword.jsx","components/AddressPage.jsx","App.js","reportWebVitals.js","store/cartitemsreducer.js","store/reducer.js","store/index.js","index.js","Pinevox-Horizontal.svg","assets/LoginPageImg.png","PineVox-Horizontal-bw.svg"],"names":["api","axios","create","baseURL","process","isRefreshing","refreshSubscribers","getExpiryTime","token","jwtDecode","exp","error","console","refreshToken","async","log","refresh_token","localStorage","getItem","response","post","headers","concat","data","accessToken","setItem","map","callback","interceptors","request","use","config","url","includes","expiryTime","Date","now","Promise","resolve","newToken","push","reject","uservalidation","RegSupplier","LoginRegisterMenu","activeLink","setActiveLink","useState","React","createElement","className","Link","to","href","target","rel","RoleNavbar","_ref","isLoggedIn","handleLinkClick","link","logout","e","dispatch","type","sessionStorage","clear","history","state","useSelector","useHistory","useDispatch","loggedin","username","Username","onClick","cart","length","x","qty","reduce","a","b","parseInt","Product","props","showModal","isExpanded","setIsExpanded","stockAvail","free_stock","availability","key","item","style","border","src","image_url","loading","alt","class","description","substring","toggleDescription","color","retail_price","TopSlider","LottieAnimation","Player","background","speed","width","height","loop","autoplay","controls","AllProduct","products","setProducts","pcat","subcat","useParams","pname","setQty","setLoading","showDialog","setShowDialog","display","setDisplay","prod","closeDialog","useEffect","get","withCredentials","then","resp","catch","addToCart","product","swal","title","text","icon","button","Role","itemName","findIndex","payload","updatedCart","JSON","stringify","filter","zIndex","description_short","min","max","value","onChange","toFixed","TopNavbar","FontAwesomeIcon","faHeadset","faPhone","Fragment","require","NavBar","logo","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","IsLoggedIn","ProgressBar","currentStep","steps","role","aria-valuenow","aria-valuemin","aria-valuemax","step","index","margin","fontWeight","RegCustomer","user","setUser","firstName","lastName","userEmail","password","cpwd","phone","altPhone","businessName","errors","setErrors","submitted","setSubmitted","isPasswordVisible","setIsPasswordVisible","validateField","name","newErrors","nameRegex","phoneRegex","emailRegex","passwordRegex","test","handleInput","prevUser","validateUser","loginUser","sendEmail","templateParams","emailjs","send","EMAILJS_USER_ID","EMAILJS_TEMPLATE_ID","EMAILJS_PUBLIC_KEY","status","errorMessage","message","onSubmit","preventDefault","Object","entries","forEach","keys","htmlFor","placeholder","required","paddingTop","paddingBottom","aria-describedby","data-placement","borderLeft","borderLeftWidth","padding","borderRadius","marginTop","togglePasswordVisibility","disabled","loginvalidation","values","AdminProfile","SellerLogin","CustomerLogin","packageName","URLSearchParams","window","location","search","LoginPageImage","GoogleLogin","onSuccess","credentialResponse","credential","access_token","onError","handleGoogleLoginError","MyProducts","sellerid","StyledTableCell","styled","TableCell","theme","tableCellClasses","head","backgroundColor","palette","common","black","white","body","fontSize","StyledTableRow","TableRow","_ref2","action","hover","TableContainer","component","Paper","Table","sx","minWidth","TableHead","align","TableBody","prodid","photo","brand","price","deleteProduct","buttons","dangerMode","willDelete","delete","ProfileSection","userData","setUserData","companyAddress","billingAddress","Authorization","join","_resp$data$company_ad","_resp$data$company_ad2","_resp$data$company_ad3","_resp$data$company_ad4","_resp$data$company_ad5","_resp$data$company_ad6","_resp$data$company_ad7","_resp$data$billing_ad","_resp$data$billing_ad2","_resp$data$billing_ad3","_resp$data$billing_ad4","_resp$data$billing_ad5","_resp$data$billing_ad6","_resp$data$billing_ad7","company_address","line_1","line_2","city","district","county","country","post_code","Boolean","billing_address","UserEmail","readOnly","rows","MyOrders","orders","setOrders","details","setDetails","selectedOrder","setSelectedOrder","modalOpen","setModalOpen","order","createdAt","split","totalAmount","paymentStatus","receipt","BillingSection","services","setServices","totalCost","setTotalCost","address","setAddress","calculateTotalCost","total","pstnCost","adslCost","callRecordingCost","annexRental","faxToEmailCost","service","CustomerProfile","activeComponent","setActiveComponent","renderComponent","Orders","show","setShow","orderid","Moment","format","orderDate","payment","amount","customer","showDetails","modalStyle","position","top","left","transform","bgcolor","boxShadow","p","ViewCart","open","setOpen","newAddress","setNewAddress","setPayment","deliveryAddress","selectedAddress","setSelectedAddress","handleAddressChange","event","_resp$data$delivery_a","_resp$data$delivery_a2","_resp$data$delivery_a3","_resp$data$delivery_a4","_resp$data$delivery_a5","_resp$data$delivery_a6","_resp$data$delivery_a7","delivery_address","deleteItem","colSpan","handleOpen","Modal","onClose","handleClose","aria-labelledby","Box","maxWidth","overflowY","maxHeight","chosenAddress","sessionUrl","checked","charAt","toUpperCase","slice","boxSizing","ForgotPassword","setData","Footer","alignItems","marginBottom","faFacebook","faTwitter","faYoutube","faInstagram","faLinkedin","Address","apiKey","selectedPlan","setSelectedPlan","suggestions","setSuggestions","expanded","setExpanded","setCurrentStep","isBillingCopied","setIsBillingCopied","isDeliveryCopied","setIsDeliveryCopied","handlePostcodeChange","prev","callApi","handleSuggestionClick","suggestion","getAddressUrl","addressDetails","town_or_city","postcode","searchText","finally","copyOrClearCompanyAddress","isCopied","renderAddressSection","isCopyable","arguments","undefined","setIsCopied","field","replace","Configuration","numUsers","setNumUsers","existingNumber","setExistingNumber","additionalServices","setAdditionalServices","userCount","newNumber","ProtectedRoute","Component","path","rest","isLogged","Route","assign","Redirect","Billing","totalActivationCharge","setTotalActivationCharge","monthlyCost","setMonthlyCost","couponCode","setCouponCode","selectedCoupon","setSelectedCoupon","planCost","cost","Number","temp","activationDiscount","monthlyDiscount","monthlyServices","fetchAddress","fetchPackage","billingInfo","currency","appFee","mandateScheme","authorisationUrl","styles","container","justifyContent","card","animation","iconContainer","checkmark","borderColor","from","opacity","PaymentFailure","PaymentSuccess","ResetPassword","handleChange","companyPostcode","setCompanyPostcode","companyPostcodeSuggestions","setCompanyPostcodeSuggestions","billingPostcode","setBillingPostcode","billingPostcodeSuggestions","setBillingPostcodeSuggestions","deliveryPostcode","setDeliveryPostcode","deliveryPostcodeSuggestions","setDeliveryPostcodeSuggestions","sameAsShipping","setSameAsShipping","handleAddressInput","prevAddress","isMounted","delay","setTimeout","clearTimeout","handleCheckboxChange","App","BrowserRouter","Switch","exact","AddressPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","cartitemsreducer","getUserFromToken","decodedToken","userId","reducer","removeItem","savedCart","parse","combreducer","combineReducers","store","createStore","ReactDOM","render","GoogleOAuthProvider","clientId","StrictMode","table","Provider","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.311a68cf.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {jwtDecode} from 'jwt-decode'; // Import the jwt-decode library\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL, // Base URL for your API\r\n});\r\n\r\nlet isRefreshing = false;\r\nlet refreshSubscribers = [];\r\n\r\n// Function to get expiry time from the token\r\nconst getExpiryTime = (token) => {\r\n  if (!token) return null;\r\n  try {\r\n    const decoded = jwtDecode(token);\r\n    return decoded.exp * 1000; // JWT exp is in seconds, convert to milliseconds\r\n  } catch (error) {\r\n    console.error('Error decoding token:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst onRefreshed = (token) => {\r\n  refreshSubscribers.map((callback) => callback(token));\r\n  refreshSubscribers = [];\r\n};\r\n\r\nconst addRefreshSubscriber = (callback) => {\r\n  refreshSubscribers.push(callback);\r\n};\r\n\r\n// Function to refresh the token\r\nconst refreshToken = async () => {\r\n  try {\r\n    console.log(\"Refreshing token...\");\r\n    const refresh_token = localStorage.getItem('refresh_token');\r\n    const response = await api.post('/api/v1/auth/refresh-token', null, {\r\n      headers: {\r\n        'Authorization': `Bearer ${refresh_token}`\r\n      }\r\n    });\r\n    console.log(response.data)\r\n    const { accessToken , refreshToken } = response.data;\r\n    localStorage.setItem('access_token', accessToken);\r\n    localStorage.setItem('refresh_token', refreshToken);\r\n    localStorage.setItem('expiry_time', getExpiryTime(accessToken));\r\n    console.log(\"Token refreshed successfully.\");\r\n    isRefreshing = false;\r\n    onRefreshed(accessToken);\r\n    return accessToken;\r\n  } catch (error) {\r\n    console.error('Token refresh error:', error);\r\n    isRefreshing = false;\r\n    return null;\r\n  }\r\n};\r\n\r\n// Axios request interceptor\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    try {\r\n      if (config.url.includes('/refresh-token')) {\r\n        return config; // Bypass the interceptor logic for token refresh requests\r\n      }\r\n\r\n      let token = localStorage.getItem('access_token');\r\n      const expiryTime = getExpiryTime(token);\r\n\r\n      if (expiryTime && Date.now() >= expiryTime - 60000) { // Refresh token 1 minute before expiry\r\n        if (!isRefreshing) {\r\n          isRefreshing = true;\r\n          token = await refreshToken();\r\n        } else {\r\n          // Wait until the refresh is done\r\n          token = await new Promise((resolve) => {\r\n            addRefreshSubscriber((newToken) => {\r\n              resolve(newToken);\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      console.log(\"here\"); // Ensure this line gets executed\r\n      if (token) {\r\n        config.headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n\r\n      return config;\r\n    } catch (error) {\r\n      console.error('Interceptor error:', error);\r\n      return Promise.reject(error);\r\n    }\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","const uservalidation=(values)=>{\n    let errors={}\n    if(!values.name){\n        errors.name=\"Name is required\"\n    }\n    if(!values.city){\n        errors.city=\"City is required\"\n    }\n    if(!values.userid){\n        errors.userid=\"User id is required\"\n    }\n    if(!values.phone){\n        errors.phone=\"Phone no is required\"\n    }\n    if(!values.pwd){\n        errors.pwd=\"Password is required\"\n    }\n    if(!values.cpwd){\n        errors.cpwd=\"Confirm password is required\"\n    }\n    \n    if(values.pwd && values.cpwd && values.pwd!==values.cpwd){\n        errors.cpwd=\"Password not match\"\n    }\n\n    return errors;\n}\n\nexport default uservalidation;","import React from 'react';\nimport api from \"../util/axiosConfig\";\nimport { useEffect, useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport uservalidation from \"../uservalidation\"\nimport swal from 'sweetalert';\n\n\nfunction RegSupplier()\n{\n    const history=useHistory()\n    const [submitted,setSubmitted]=useState(false)\n    const [user,setUser]=useState({\n        \"name\":\"\",\n        \"city\":\"\",\n        \"userid\":\"\",\n        \"pwd\":\"\",\n        \"cpwd\":\"\",\n        \"phone\":\"\"\n    })\n    const [errors,setErrors]=useState({})\n \n    const handleInput=(e)=>{\n        setUser({...user,[e.target.name]:e.target.value})\n    }\n\n    const handleSubmit=(e)=>{\n        e.preventDefault()\n        setErrors(uservalidation(user))   \n        setSubmitted(true)     \n    }\n\n    useEffect(()=>{\n        console.log(errors)\n        if(Object.keys(errors).length===0 && submitted){\n            console.log(user)\n            api.post(\"/api/sellers\",user)\n            .then(resp=>{\n                console.log(resp)\n                swal({\n                    title: \"Success\",\n                    text: \"Seller registered successfully\",\n                    icon: \"success\",\n                    button: \"ok\",\n                  });\n                history.push(\"/slogin\")\n            })\n             .catch(error=>{\n                console.log(\"Error\",error);\n                swal({\n                    title: \"Error\",\n                    text: \"Seller not registered\",\n                    icon: \"error\",\n                    button: \"ok\",\n                  });\n            })                \n        }\n    },[errors])\n    return (\n        <div className=\"container\">\n            <div className=\"card shadow bg-transparent mt-3 text-white\">\n        <div className=\"card-body\">\n            <div className=\"row\">\n                <div className=\"col-sm-6 mx-auto\">\n                    <h4 className=\"text-center p-2\">\n                        Supplier Registration Form\n                    </h4>\n                    <form onSubmit={handleSubmit}>\n                    <div className=\"form-group form-row\">\n                        <label className=\"col-sm-4 form-control-label\">Supplier Name</label>\n                        <div className=\"col-sm-8\">\n                            <input type=\"text\" name=\"name\" value={user.name} onChange={handleInput} className=\"form-control\" />\n                            {errors.name && <small className=\"text-danger float-right\">{errors.name}</small>}\n                        </div>                        \n                    </div>\n                    <div className=\"form-group form-row\">\n                        <label className=\"col-sm-4 form-control-label\">City</label>\n                        <div className=\"col-sm-8\">\n                            <input type=\"text\" name=\"city\" value={user.city} onChange={handleInput} className=\"form-control\" />\n                            {errors.city && <small className=\"text-danger float-right\">{errors.city}</small>}\n                        </div>\n                        \n                    </div>\n                    <div className=\"form-group form-row\">\n                        <label className=\"col-sm-4 form-control-label\">Email Id</label>\n                        <div className=\"col-sm-8\">\n                            <input type=\"email\" name=\"userid\" value={user.userid} onChange={handleInput} className=\"form-control\" />\n                            {errors.userid && <small className=\"text-danger float-right\">{errors.userid}</small>}\n                        </div>\n                        \n                    </div>\n                    <div className=\"form-group form-row\">\n                        <label className=\"col-sm-4 form-control-label\">Phone</label>\n                        <div className=\"col-sm-8\">\n                            <input type=\"text\" maxLength=\"10\" name=\"phone\" value={user.phone} onChange={handleInput} className=\"form-control\" />\n                            {errors.phone && <small className=\"text-danger float-right\">{errors.phone}</small>}\n                        </div>\n                        \n                    </div>\n                    <div className=\"form-group form-row\">\n                        <label className=\"col-sm-4 form-control-label\">Password</label>\n                        <div className=\"col-sm-8\">\n                            <input type=\"password\" name=\"pwd\" value={user.pwd} onChange={handleInput} className=\"form-control\" />\n                            {errors.pwd && <small className=\"text-danger float-right\">{errors.pwd}</small>}\n                        </div>\n                    </div>\n                    <div className=\"form-group form-row\">\n                        <label className=\"col-sm-4 form-control-label\">Confirm Password</label>\n                        <div className=\"col-sm-8\">\n                            <input type=\"password\" name=\"cpwd\" value={user.cpwd} onChange={handleInput} className=\"form-control\" />\n                            {errors.cpwd && <small className=\"text-danger float-right\">{errors.cpwd}</small>}\n                        </div>\n                    </div>\n                    <button className=\"btn btn-warning float-right\">Register Now</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n        </div>\n        </div>\n    )\n}\n\nexport default RegSupplier;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./RoleNavbar.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction LoginRegisterMenu() {\r\n  const [activeLink, setActiveLink] = useState(\"\");\r\n\r\n  const handleLinkClick = (link) => {\r\n    setActiveLink(link);\r\n  };\r\n\r\n  return (\r\n    <ul className=\"navbar-nav align-items-center\">\r\n      <li className=\"nav-item\">\r\n        <Link className={`nav-link nav-link-hover ${activeLink === 'products' ? 'active' : ''}`} to=\"/cart\">Products </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className={`nav-link nav-link-hover ${activeLink === 'contact' ? 'active' : ''}`} href=\"https://pinevox.com/contact/\" target=\"_blank\"  rel=\"noopener noreferrer\">Contact</a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className={`nav-link nav-link-hover ${activeLink === 'login' ? 'active' : ''}`} to=\"/clogin\" ><i className=\"fa fa-sign-in\"></i> Login</Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className={`nav-link nav-link-hover ${activeLink === 'register' ? 'active' : ''}`} to=\"/register\" ><i className=\"fa fa-user-plus\"></i> Register</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default LoginRegisterMenu;\r\n\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport LoginRegisterMenu from \"./LoginRegisterMenu\"\r\nimport \"./RoleNavbar.css\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst RoleNavbar = ({ isLoggedIn }) => {\r\n\r\n    const [activeLink, setActiveLink] = useState('');\r\n\r\n    const handleLinkClick = (link) => {\r\n        setActiveLink(link);\r\n    };\r\n\r\n    const logout = e => {\r\n        dispatch({ type: 'LogOut' })\r\n        sessionStorage.clear();\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const state = useSelector((state) => state);\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    console.log(sessionStorage.getItem(\"role\"), isLoggedIn)\r\n    console.log(state.loggedin.username);\r\n    if (!isLoggedIn) {\r\n        return (\r\n            <LoginRegisterMenu />\r\n        )\r\n    } else if (isLoggedIn) {\r\n        return (\r\n            <ul className=\"navbar-nav align-items-center\">\r\n                <li className=\"nav-item\">\r\n                    <span className=\"nav-link text-primary\"> Welcome, {state.loggedin.Username}</span>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className={`nav-link nav-link-hover ${activeLink === 'cart' ? 'active' : ''}`} to=\"/cart\" onClick={() => handleLinkClick('cart')}>View Cart {state.cart.length === 0 ? '' :\r\n                        <span className=\"badge badge-primary p-2\">{state.cart.map(x => x.qty).reduce((a, b) => parseInt(a) + parseInt(b))}</span>}</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className={`nav-link nav-link-hover ${activeLink === 'profile' ? 'active' : ''}`} to=\"/cprofile\" onClick={() => handleLinkClick('profile')}>Profile</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className={`nav-link nav-link-hover ${activeLink === 'product' ? 'active' : ''}`} to=\"/product\" onClick={() => handleLinkClick('orders')}>Products</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link nav-link-hover\" onClick={logout} to=\"#\">Logout</Link>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default RoleNavbar;","import React, { useState } from \"react\";\r\nimport './Product.css';\r\n\r\nfunction Product(props) {\r\n  const { x, showModal } = props;\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  const toggleDescription = () => {\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  const stockAvail = x.free_stock === 0 ? (((x.free_stock <= 5 && x.free_stock > 0) || x.availability === \"EOL\") ? \"limited\" : \"out-of-stock\") : \"\";\r\n\r\n  return (\r\n    <div className=\"col-md-3\" key={x.item}>\r\n      <div className=\"product-card\">\r\n        <div className=\"product-img\">\r\n          <img\r\n            style={{ border: 'none' }}\r\n            src={x.image_url ? x.image_url : \"https://upload.wikimedia.org/wikipedia/commons/d/d1/Image_not_available.png\"}\r\n            className=\"img-thumbnail\"\r\n            loading=\"lazy\"\r\n            alt={x.item}\r\n          />\r\n        </div>\r\n        <div className=\"product-info text-center\">\r\n          <h3 className=\"product-name\">{x.item}</h3>\r\n          <h6 className=\"product-category\">Brand: {x.class}</h6>\r\n          <h6 className=\"product-category\">Stock: {x.free_stock}</h6>\r\n          {/* <div className=\"description-prod\">\r\n            <p>{x.description}</p>\r\n          </div> */}\r\n          <div className=\"description-prod\">\r\n            <p>\r\n              {isExpanded ? x.description : `${x.description.substring(0, 20)}`}\r\n              <a onClick={toggleDescription} color=\"#6574F6\">\r\n                {isExpanded ? '...less' : '...more'}\r\n              </a>\r\n            </p>\r\n          </div>\r\n          {stockAvail === \"out-of-stock\" ? (\r\n            <p className=\"out-of-stock-text\">Out of stock</p>\r\n          ) : (\r\n            <div className=\"row d-flex justify-content-around\">\r\n              <div className=\"product-price\">&pound; {x.retail_price}</div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-cart mt-2\"\r\n                onClick={() => showModal(x)}\r\n              >\r\n                <span>🛒</span> Add to Cart\r\n              </button>\r\n              {/* <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-lg d-flex align-items-center justify-content-center\"\r\n                style={{ borderRadius: '25px', padding: '10px 20px', fontSize: '16px', fontWeight: 'bold' }}\r\n                onClick={() => showModal(x)}\r\n              >\r\n                <span className=\"mr-2\">🛒</span> Add to Cart\r\n              </button> */}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"./TopSlider.css\";\r\n\r\nfunction TopSlider() {\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 2500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 5000,\r\n    cssEase: \"linear\",\r\n    width: \"50%\",\r\n    padding: \"10px\",\r\n  };\r\n\r\n  return (\r\n    <div className='header-container'>\r\n      <div className=\"header d-flex flex-column flex-md-row align-items-center\">\r\n        {/* <img\r\n          src=\"https://via.placeholder.com/600x300\"\r\n          alt=\"IT hardware\"\r\n          className=\"img-fluid\"\r\n        /> */}\r\n        <div className=\"header-content text-center text-md-start\">\r\n          <h2>Revolutionize Your IT Infrastructure</h2>\r\n          <p>Equip your business with the latest in IT hardware. Our comprehensive range includes high-performance servers, cutting-edge hardware, and robust networking solutions. Easy setup and unparalleled support ensure your tech is always up and running.</p>\r\n          <p className=\"info-text\">No setup fee required • 30-day money-back guarantee</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default TopSlider;\r\n","// src/LottieAnimation.js\nimport React from 'react';\nimport { Player } from '@lottiefiles/react-lottie-player';\n\nconst LottieAnimation = () => {\n  return (\n    <Player\n      src=\"https://lottie.host/654a6092-acc4-4ee6-bb26-399a588cba05/bEUJiDR8Wy.json\"\n      background=\"transparent\"\n      speed={1}\n      style={{ width: 300, height: 300 }}\n      loop\n      autoplay\n      controls\n    />\n  );\n};\n\nexport default LottieAnimation;\n","import React from \"react\";\r\nimport api from \"../util/axiosConfig\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Product from \"./Product\";\r\nimport TopSlider from \"./TopSlider\";\r\nimport swal from \"sweetalert\";\r\nimport \"./AllProducts.css\";\r\nimport LottieAnimation from \"../util/Loading\";\r\n\r\nfunction AllProduct(props) {\r\n  const [products, setProducts] = useState([]);\r\n  const { pcat, subcat } = useParams();\r\n  const { pname } = useParams();\r\n  const state = useSelector((state) => state);\r\n  const [item, setItem] = useState({});\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [showDialog, setShowDialog] = useState(\"modal fade\");\r\n  const [display, setDisplay] = useState(\"none\");\r\n\r\n  const showModal = (prod) => {\r\n    console.log(\"Child call parent\");\r\n    setShowDialog(\"modal fade show\");\r\n    setDisplay(\"block\");\r\n    setItem(prod);\r\n  };\r\n\r\n  const checkItem = (itemName) => {\r\n    return state.cart.findIndex((x) => x.item === itemName) < 0;\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setShowDialog(\"modal fade\");\r\n    setDisplay(\"none\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (products.length === 0) {\r\n      api\r\n        .get(`/api/v1/products`, {\r\n          withCredentials: true, // Include credentials (cookies/sessions) if required\r\n        })\r\n        .then((resp) => {\r\n          setLoading(false);\r\n          console.log(resp.data);\r\n          setProducts(resp.data || []);\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false);\r\n          console.log(\"failed to load products. Error: \" + e);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  function filterFunction(x){\r\n      if(x.image_url == \"\" || x.image_url == null){\r\n        return false;\r\n      }\r\n      return true;\r\n  }\r\n\r\n  const addToCart = (product) => {\r\n    if (state.loggedin.Username == null) {\r\n      swal({\r\n        title: \"Warning\",\r\n        text: \"Please login first to buy product\",\r\n        icon: \"warning\",\r\n        button: \"ok\",\r\n      });\r\n      history.push(\"/clogin\");\r\n    } else if (state.loggedin.Role !== \"USER\") {\r\n      swal({\r\n        title: \"Warning\",\r\n        text: \"Please log-in to buy this product\",\r\n        icon: \"warning\",\r\n        button: \"ok\",\r\n      });\r\n    } else {\r\n      if (checkItem(product.item)) {\r\n        showModal();\r\n        setDisplay(\"none\");\r\n        setShowDialog(\"modal fade\");\r\n        product.qty = qty;\r\n        dispatch({ type: \"AddItem\", payload: product });\r\n        const updatedCart = [...state.cart, product]; //save cart to localstorage\r\n        localStorage.setItem('cart', JSON.stringify(updatedCart));\r\n        swal({\r\n          title: \"Success\",\r\n          text: \"Item added to cart successfully\",\r\n          icon: \"success\",\r\n          button: \"ok\",\r\n        });\r\n      } else {\r\n        swal({\r\n          title: \"Warning\",\r\n          text: \"Item already in cart\",\r\n          icon: \"warning\",\r\n          button: \"ok\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopSlider />\r\n      <div className=\"container-fluid\" style={{ width: \"92%\" }}>\r\n        <div className=\"\">\r\n          <div className=\"card-body\">\r\n            {loading ? (\r\n              <LottieAnimation />\r\n            ) : (\r\n              <div className=\"row\">\r\n                {products &&\r\n                  products.filter((x) => x.image_url).map((x) => (\r\n                    <Product key={x.item} x={x} showModal={showModal} />\r\n                  ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {display === \"block\" && (\r\n          <div>\r\n            <div\r\n              className={`modal-backdrop ${showDialog ? \"show\" : \"\"}`}\r\n              style={{ zIndex: \"999\", display: display }}\r\n              onClick={closeDialog}\r\n            ></div>\r\n            <div\r\n              className={`modal-container ${showDialog ? \"show\" : \"\"}`}\r\n              style={{ zIndex: \"1000\", display: display }}\r\n            >\r\n              <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <button onClick={closeDialog} className=\"close\">\r\n                      &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    <div className=\"payment-summary\">\r\n                      <h4>Product Summary</h4>\r\n                      <h5>{item.item}</h5>\r\n                      <div className=\"column-div\">\r\n                        <div className=\"product-info\">\r\n                          <div className=\"cart-info-name\">\r\n                            <img src={item.image_url ? item.image_url : \"https://upload.wikimedia.org/wikipedia/commons/d/d1/Image_not_available.png\"} alt=\"product_image\" height={'200px'} />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"product-details\">\r\n                        <div className=\"cart-info\">\r\n                          <p>Brand: </p>\r\n                          <p>{item.class}</p>\r\n                        </div>\r\n                          <div className=\"cart-info\">\r\n                            <p>Description: </p>\r\n                            <p>{item.description_short}</p>\r\n                          </div>\r\n                          <div className=\"cart-info\">\r\n                            <p>Stock: </p>\r\n                            <p>{item.free_stock}</p>\r\n                          </div>\r\n                          <div className=\"cart-info\">\r\n                            <p>Quantity: </p>\r\n                            <input\r\n                              className=\"custom-input\"\r\n                              type=\"number\"\r\n                              min=\"1\"\r\n                              max={item.free_stock}\r\n                              value={qty}\r\n                              onChange={(e) => setQty(e.target.value)}\r\n                            />\r\n                          </div>\r\n                          <div className=\"cart-info total\">\r\n                            <p>Price:</p>\r\n                            <p>&pound; {(item.retail_price * qty).toFixed(2)}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <button className=\"btn btn-danger mt-2\" onClick={(e) => addToCart(item)}>\r\n                      Add to cart\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllProduct;\r\n","import React, { Component } from \"react\";\r\nimport \"./TopNavbar.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPhone,\r\n  faHeadset,\r\n  faRightToBracket,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nfunction TopNavbar() {\r\n  return (\r\n    <div className=\"top_nav\">\r\n      <div className=\"row1\">\r\n        <div className=\"helper-container\">\r\n          <div className=\"top_nav_left\">\r\n            <a style={{ color: \"#b5aec4\" }} href=\"https://pinevox.com/contact/\" target=\"_blank\">\r\n              <FontAwesomeIcon icon={faHeadset} />\r\n              <span>&nbsp;</span>\r\n              Help\r\n            </a>\r\n          </div>\r\n          <span> | </span>\r\n          <a className=\"top_nav_left\" href=\"tel:+443301796233\">\r\n            <FontAwesomeIcon icon={faPhone} style={{ color: \"#b5aec4\" }} />\r\n            <span>&nbsp;&nbsp;</span>\r\n            +44-330-179-6233\r\n          </a>\r\n          {/* <span> | </span>\r\n          <div className=\"top_nav_left\">\r\n            <Link\r\n              to=\"/clogin\"\r\n              style={{ color: \"#b5aec4\", textDecoration: \"none\" }}\r\n            >\r\n              <FontAwesomeIcon icon={faRightToBracket} />\r\n              <span>&nbsp;&nbsp;</span>Login\r\n            </Link>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopNavbar;\r\n","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RoleNavbar from \"./RoleNavbar\";\r\nimport Dropdown from 'rsuite/Dropdown';\r\nimport 'rsuite/dist/rsuite.min.css';\r\nimport MenuIcon from '@rsuite/icons/Menu';\r\nimport { useState, useEffect } from \"react\";\r\nimport AllProduct from \"./AllProducts\";\r\nimport logo from \"../Pinevox-Horizontal.svg\"\r\nimport './NavBar.css'\r\n\r\n\r\nimport TopNavbar from './TopNavbar';\r\n\r\nconst { Fragment } = require(\"react\");\r\n\r\nfunction NavBar() {\r\n    const state = useSelector((state) => state);\r\n\r\n    console.log(\"LoggedIn \", state.loggedin)\r\n    console.log(\"Cart \", state.cart)\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <TopNavbar />\r\n            <nav className=\"navbar navbar-expand-md shadow-sm position-sticky mx-md-auto custom-style\">\r\n                <a className=\"navbar-brand px-3\" href=\"https://pinevox.com/\">\r\n                    <img src={logo} alt=\"Company_logo\" width='50%' height=\"50%\" />\r\n                </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"fa fa-bars\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\r\n                    <RoleNavbar isLoggedIn={state.loggedin.IsLoggedIn} />\r\n                </div>\r\n\r\n\r\n            </nav>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default NavBar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst ProgressBar = ({ currentStep }) => {\r\n    const steps = ['Register', 'Services', 'Address', 'Confirmation'];\r\n\r\n    return (\r\n        <div className=\"container m-2 pb-3\">\r\n            <div className=\"progress\" style={{ height: '2px' }}>\r\n                <div\r\n                    className=\"progress-bar bg-primary\"\r\n                    role=\"progressbar\"\r\n                    style={{ width: `${((currentStep-1) / (steps.length-1)) * 100}%` }}\r\n                    aria-valuenow={((currentStep) / (steps.length-1)) * 100}\r\n                    aria-valuemin=\"0\"\r\n                    aria-valuemax=\"100\"\r\n                ></div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between mt-2\">\r\n                {steps.map((step, index) => (\r\n                    <div key={index} className=\"text-center\">\r\n                        <div\r\n                            className={`rounded-circle d-flex align-items-center justify-content-center mb-1 ${index < currentStep ? 'bg-primary' : 'bg-secondary'\r\n                                }`}\r\n                            style={{ width: '30px', height: '30px', margin: '0 auto', color: 'white', fontWeight: \"bold\"}}\r\n                        >\r\n                            {index + 1}\r\n                        </div>\r\n                        <div className=\"small\">{step}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport \"./RegCustomer.css\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport ProgressBar from \"./ProgressBar.jsx\"\r\nimport { Margin } from \"@mui/icons-material\";\r\nimport emailjs from \"emailjs-com\"; // Import EmailJS\r\n\r\nconst RegCustomer = () => {\r\n  const currentStep = 1;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [user, setUser] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    userEmail: '',\r\n    password: '',\r\n    cpwd: '',\r\n    phone: '',\r\n    altPhone: '',\r\n    businessName: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  // State to toggle password visibility\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n\r\n  // Function to toggle password visibility\r\n  const togglePasswordVisibility = () => {\r\n    setIsPasswordVisible(!isPasswordVisible);\r\n  };\r\n\r\n  const validateField = (name, value) => {\r\n    const newErrors = { ...errors };\r\n    const nameRegex = /^[a-zA-Z\\s]+$/;\r\n    const phoneRegex = /^\\d{10}$/;\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const passwordRegex = /^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n\r\n    switch (name) {\r\n      case 'firstName':\r\n        if (!value || !nameRegex.test(value)) {\r\n          newErrors.firstName = 'First name is required and should only contain letters';\r\n        } else {\r\n          delete newErrors.firstName;\r\n        }\r\n        break;\r\n      case 'lastName':\r\n        if (!value || !nameRegex.test(value)) {\r\n          newErrors.lastName = 'Last name is required and should only contain letters';\r\n        } else {\r\n          delete newErrors.lastName;\r\n        }\r\n        break;\r\n      case 'phone':\r\n        if (!value || !phoneRegex.test(value)) {\r\n          newErrors.phone = 'Phone number is required and should be in UK format';\r\n        } else {\r\n          delete newErrors.phone;\r\n        }\r\n        break;\r\n      case 'altPhone':\r\n        if (!value || !phoneRegex.test(value)) {\r\n          newErrors.altPhone = 'Landline number is required and should be in UK format';\r\n        } else {\r\n          delete newErrors.altPhone;\r\n        }\r\n        break;\r\n      case 'userEmail':\r\n        if (!value || !emailRegex.test(value)) {\r\n          newErrors.userEmail = 'Valid email is required';\r\n        } else {\r\n          delete newErrors.userEmail;\r\n        }\r\n        break;\r\n      case 'businessName':\r\n        if (!value) {\r\n          newErrors.businessName = 'Business Name is required';\r\n        } else {\r\n          delete newErrors.businessName;\r\n        }\r\n        break;\r\n      case 'password':\r\n        if (!value || !passwordRegex.test(value)) {\r\n          newErrors.password = 'Password is required and should be at least 8 characters long, contain one capital letter, one special character, and one number';\r\n        } else {\r\n          delete newErrors.password;\r\n        }\r\n        // Check password confirmation when password changes\r\n        if (user.cpwd && value !== user.cpwd) {\r\n          newErrors.cpwd = 'Passwords do not match';\r\n        } else {\r\n          delete newErrors.cpwd;\r\n        }\r\n        break;\r\n      case 'cpwd':\r\n        if (value !== user.password) {\r\n          newErrors.cpwd = 'Passwords do not match';\r\n        } else {\r\n          delete newErrors.cpwd;\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser(prevUser => ({\r\n      ...prevUser,\r\n      [name]: value,\r\n    }));\r\n    validateField(name, value);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    Object.entries(user).forEach(([name, value]) => validateField(name, value));\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  // Function to send email via EmailJS\r\n  const sendEmail = () => {\r\n    const templateParams = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      userEmail: user.userEmail,\r\n    };\r\n\r\n    emailjs\r\n      .send(process.env.EMAILJS_USER_ID, process.env.EMAILJS_TEMPLATE_ID, templateParams, process.env.EMAILJS_PUBLIC_KEY)\r\n      .then(\r\n        (response) => {\r\n          console.log('Email sent successfully!', response.status, response.text);\r\n        },\r\n        (error) => {\r\n          console.log('Failed to send email:', error);\r\n          swal({\r\n            title: 'Error',\r\n            text: 'Failed to send confirmation email',\r\n            icon: 'error',\r\n            button: 'ok',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      setSubmitted(true);\r\n    }\r\n  };\r\n\r\n  const loginUser = async (validateUser) => {\r\n    try {\r\n      const resp = await axios.post(`${process.env.REACT_APP_BASE_URL}/api/v1/auth/login`, validateUser);\r\n      // const resp = await axios.post('http://localhost:3000/api/v1/auth/login', validateUser);\r\n      const { accessToken, refreshToken } = resp.data;\r\n      const decoded = jwtDecode(accessToken);\r\n      const expiryTime = decoded.exp * 1000;\r\n\r\n      localStorage.setItem(\"access_token\", accessToken);\r\n      localStorage.setItem(\"refresh_token\", refreshToken);\r\n      localStorage.setItem(\"expiry_time\", expiryTime);\r\n\r\n      dispatch({ type: \"IsLoggedIn\" });\r\n      history.push('/configuration');\r\n    } \r\n    catch (error) {\r\n      swal({\r\n        title: 'Error',\r\n        text: 'Customer not logged in',\r\n        icon: 'error',\r\n        button: 'ok',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (submitted) {\r\n      axios\r\n        .post(`${process.env.REACT_APP_BASE_URL}/api/v1/auth/register`, user)\r\n        .then((resp) => {\r\n          swal({\r\n            title: 'Success',\r\n            text: 'Thanks for registering!',\r\n            icon: 'success',\r\n            button: 'ok',\r\n          });\r\n  \r\n          const validateUser = {\r\n            userEmail: user.userEmail,\r\n            password: user.password,\r\n          };\r\n  \r\n          loginUser(validateUser);\r\n          sendEmail(); // Send email upon successful registration\r\n        })\r\n        .catch((error) => {\r\n          // Check for presence of error.response, error.response.data, and error.response.data.message\r\n          const errorMessage =\r\n            error.response &&\r\n            error.response.data &&\r\n            error.response.data.message;\r\n  \r\n          if (errorMessage && errorMessage.includes(\"Duplicate entry\")) {\r\n            swal({\r\n              title: 'Error',\r\n              text: 'User with this email already exists',\r\n              icon: 'error',\r\n              button: 'ok',\r\n            });\r\n          } else {\r\n            swal({\r\n              title: 'Error',\r\n              text: 'Customer not registered',\r\n              icon: 'error',\r\n              button: 'ok',\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }, [submitted]);\r\n  \r\n\r\n  return (\r\n    <div className=\"container container-form mt-5 d-flex flex-column\">\r\n      <ProgressBar currentStep={currentStep} />\r\n      <div className=\"signup-card\">\r\n        <div className=\"signup-header\">\r\n          <h1 className=\"signup-title\">Drive success with seamless communication</h1>\r\n          <p className=\"signup-subtitle\">Please fill the details below to get started</p>\r\n        </div>\r\n        <form onSubmit={handleSubmit} className=\"signup-form px-5\">\r\n          <div className=\"d-flex flex-row\">\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"userEmail\" className=\"form-label\">\r\n                <span>First Name</span>\r\n                <span className=\"text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                value={user.firstName}\r\n                onChange={handleInput}\r\n                placeholder=\"First Name\"\r\n                required\r\n              />\r\n              {errors.firstName && <div className=\"text-danger small mt-1 px-3\">{errors.firstName}</div>}\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"userEmail\" className=\"form-label\">\r\n                <span>Last Name</span>\r\n                <span className=\"text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                value={user.lastName}\r\n                onChange={handleInput}\r\n                placeholder=\"Last Name\"\r\n                required\r\n              />\r\n              {errors.lastName && <div className=\"text-danger small mt-1 px-3\">{errors.lastName}</div>}\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex flex-row\">\r\n            <div className=\"col-md-6 mb-3\">\r\n              <div className=\"\">\r\n                <label htmlFor=\"userEmail\" className=\"form-label\">\r\n                  <span>Mobile Number</span>\r\n                  <span className=\"text-danger\">*</span>\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\" style={{ paddingTop: \"0rem\", paddingBottom: \"0rem\" }} id=\"basic-addon1\">+44</span>\r\n                  </div>\r\n                  <input type=\"tel\"\r\n                    className=\"form-control\"\r\n                    id=\"phone\"\r\n                    name=\"phone\"\r\n                    value={user.phone}\r\n                    onChange={handleInput}\r\n                    placeholder=\"Mobile Number\"\r\n                    aria-label=\"Mobile Number\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              {errors.phone && <div className=\"text-danger small mt-1 px-3\">{errors.phone}</div>}\r\n            </div>\r\n\r\n            <div className=\"col-md-6 mb-3\">\r\n              <div className=\"\">\r\n                <label htmlFor=\"userEmail\" className=\"form-label\">\r\n                  <span>Landline Number</span>\r\n                  <span className=\"text-danger\">*</span>\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\" style={{ paddingTop: \"0rem\", paddingBottom: \"0rem\" }} id=\"basic-addon1\">+44</span>\r\n                  </div>\r\n                  <input\r\n                    type=\"tel\"\r\n                    className=\"form-control\"\r\n                    id=\"altPhone\"\r\n                    name=\"altPhone\"\r\n                    value={user.altPhone}\r\n                    onChange={handleInput}\r\n                    placeholder=\"Landline Number\"\r\n                    aria-label=\"Landline Number\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              {errors.altPhone && <div className=\"text-danger small mt-1 px-3\">{errors.altPhone}</div>}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group px-3\">\r\n            <label htmlFor=\"userEmail\" className=\"form-label\">\r\n              <span>Email Address </span>\r\n              <span className=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"userEmail\"\r\n              name=\"userEmail\"\r\n              value={user.userEmail}\r\n              onChange={handleInput}\r\n              placeholder={\"Email Address\"}\r\n              required\r\n            />\r\n            {errors.userEmail && <span className=\"error-message px-3\">{errors.userEmail}</span>}\r\n          </div>\r\n          <div className=\"form-group px-3\">\r\n            <label htmlFor=\"userEmail\" className=\"form-label\">\r\n              <span>Business Name</span>\r\n              <span className=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"businessName\"\r\n              name=\"businessName\"\r\n              value={user.businessName}\r\n              onChange={handleInput}\r\n              placeholder=\"Business Name\"\r\n              required\r\n            />\r\n            {errors.businessName && <span className=\"error-message px-3\">{errors.businessName}</span>}\r\n          </div>\r\n          {/* <div className=\"form-group px-3\">\r\n            <label htmlFor=\"userEmail\" className=\"form-label\">\r\n              <span>Password</span>\r\n              <span className=\"text-danger\">*</span>\r\n              <span\r\n                className=\"info-button ml-2\"\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title=\"Password should be at least 8 characters long, contain one capital letter, one special character, and one number\">\r\n                <i className=\"fa fa-info-circle\"></i>\r\n              </span>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={user.password}\r\n              onChange={handleInput}\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n            {errors.password && <span className=\"error-message px-3\">{errors.password}</span>}\r\n          </div> */}\r\n          <div className=\"form-group px-3\">\r\n            <label htmlFor=\"userEmail\" className=\"form-label\">\r\n              <span>Password</span>\r\n              <span className=\"text-danger\">*</span>\r\n              <span\r\n                className=\"info-button ml-2\"\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title=\"Password should be at least 8 characters long, contain one capital letter, one special character, and one number\"\r\n              >\r\n                <i className=\"fa fa-info-circle\"></i>\r\n              </span>\r\n            </label>\r\n\r\n            <div className=\"input-group\">\r\n              <input\r\n                type={isPasswordVisible ? \"text\" : \"password\"}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={user.password}\r\n                onChange={handleInput}\r\n                placeholder=\"Password\"\r\n                className=\"form-control\"\r\n                style={{ borderLeft: \"ridge\", borderLeftWidth: \"thin\", padding: \"1.5rem\", borderRadius: \"6px 6px 0\" }}\r\n                required\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-secondary\"\r\n                  style={{ marginTop: \"0px\" }}\r\n                  onClick={togglePasswordVisibility}\r\n                >\r\n                  <i className={isPasswordVisible ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {errors.password && <span className=\"error-message px-3\">{errors.password}</span>}\r\n          </div>\r\n\r\n          <div className=\"form-group px-3\">\r\n            <label htmlFor=\"userEmail\" className=\"form-label\">\r\n              <span>Confirm Password</span>\r\n              <span className=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"cpwd\"\r\n              name=\"cpwd\"\r\n              value={user.cpwd}\r\n              onChange={handleInput}\r\n              placeholder=\"Confirm Password\"\r\n              required\r\n            />\r\n            {errors.cpwd && <span className=\"error-message px-3\">{errors.cpwd}</span>}\r\n          </div>\r\n          <div className=\"d-flex flex-col justify-content-center\">\r\n            <button type=\"submit\" className=\"btn btn-primary btn-lg px-5 rounded-pill shadow-sm w-50\" disabled={Object.keys(errors).length > 0}>\r\n              Create Account\r\n            </button>\r\n          </div>\r\n\r\n          <p className=\"terms-text\">\r\n            By signing up, you agree to Pinevox's <a href=\"https://pinevox.com/terms-of-service/\">Terms of Service</a> & <a href=\"https://pinevox.com/privacy-policy/\">Privacy Policy</a>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegCustomer;","const loginvalidation=(values)=>{\n    let errors={}\n    if(!values.userEmail){\n        errors.userEmail=\"User id is required\"\n    }\n    if(!values.password){\n        errors.password=\"Password is required\"\n    }    \n    return errors;\n}\n\nexport default loginvalidation;","import React from 'react';\nimport api from \"../util/axiosConfig\";\nimport { useState } from \"react\";\nimport { Snackbar } from '@mui/material';\nimport MuiAlert from '@mui/material/Alert';\nimport swal from 'sweetalert';\n\nfunction AdminProfile(){\n    const Alert = React.forwardRef(function Alert(props, ref) {\n        return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n      });\n    \n        const [open, setOpen] = React.useState(false);\n      \n        const handleClick = () => {\n          setOpen(true);\n        };\n      \n        const handleClose = (event, reason) => {\n          if (reason === 'clickaway') {\n            return;\n          }\n      \n          setOpen(false);\n        };\n    const userid=sessionStorage.getItem(\"userid\")\n    const uname=sessionStorage.getItem(\"uname\")\n    const [user,setUser]=useState({\n        \"uname\":uname,\n        \"userid\":userid,\n        \"pwd\":\"\"        \n    })\n\n    const handleInput=(e)=>{\n        setUser({...user,[e.target.name]:e.target.value})\n    }\n\n    const handleSubmit=(e)=>{\n        e.preventDefault() \n        api.post(\"/api/admin\",user)\n        .then(resp=>{\n            console.log(resp)\n            sessionStorage.setItem(\"uname\",user.uname)         \n        })\n        .catch(error=>{\n            console.log(\"Error\",error);\n            swal({\n                title: \"Error\",\n                text: \"Profile not updated\",\n                icon: \"error\",\n                button: \"ok\",\n              });\n            }) \n    }\n    \n\n    return (\n        <div className=\"container-fluid\">\n            <h4 className=\"p-2 text-white text-center\">Welcome {user.uname}</h4>\n            <div className=\"row\">\n                <div className=\"col-sm-5 mx-auto\">\n                    <div className=\"card shadow bg-transparent text-white\">\n                        <div className=\"card-body\">\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"form-group form-row\">\n                                <label className=\"col-sm-4 form-control-label\">User ID</label>\n                                <div className=\"col-sm-8\">\n                                    <input type=\"text\" name=\"userid\" readOnly value={user.userid} onChange={handleInput} className=\"form-control\" />                            \n                                </div>                        \n                            </div>\n                            <div className=\"form-group form-row\">\n                                <label className=\"col-sm-4 form-control-label\">User Name</label>\n                                <div className=\"col-sm-8\">\n                                    <input type=\"text\" name=\"uname\" value={user.uname} onChange={handleInput} className=\"form-control\" />                            \n                                </div>                        \n                            </div>\n                            <div className=\"form-group form-row\">\n                                <label className=\"col-sm-4 form-control-label\">Change Password</label>\n                                <div className=\"col-sm-8\">\n                                    <input type=\"password\" name=\"pwd\" value={user.pwd} onChange={handleInput} className=\"form-control\" />                            \n                                </div>                        \n                            </div>\n                            <button className=\"btn btn-warning float-right\" onClick={handleClick}>Update Profile</button>\n                            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n                                <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\n                                Profile Updated Successfully!!!\n                                </Alert>\n                            </Snackbar>\n                        </form>\n                        </div>\n                    </div>\n                \n                </div>\n            </div>\n            \n        </div>\n    )\n}\nexport default AdminProfile;\n","import React from 'react';\nimport api from \"../util/axiosConfig\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport loginvalidation from \"../loginvalidation\"\nimport swal from 'sweetalert';\n\nfunction SellerLogin(){\n    const dispatch=useDispatch()\n    const [user,setUser]=useState({\n        \"userid\":\"\",\n        \"pwd\":\"\"\n    })\n    const [errors,setErrors]=useState({})\n    const [submitted,setSubmitted]=useState(false)\n    const history=useHistory()\n\n    const handleInput=(e)=>{\n        setUser({...user,[e.target.name]:e.target.value})\n    }\n\n    const handleSubmit=e=>{\n        e.preventDefault()\n        setErrors(loginvalidation(user)) \n        setSubmitted(true)   \n    }\n\n    useEffect(()=>{\n        console.log(errors)\n        if(Object.keys(errors).length===0 && submitted){\n            console.log(user)\n            api.post(\"/api/sellers/validate\",user)\n            .then(resp=>{\n                let result=resp.data.data;\n                console.log(resp.data.data)\n                sessionStorage.setItem(\"userid\",result.userid)\n                sessionStorage.setItem(\"uname\",result.name)\n                sessionStorage.setItem(\"role\",\"seller\")\n                sessionStorage.setItem(\"id\",result.id)\n                dispatch({type:'IsLoggedIn'})\n                history.push(\"/sprofile\")\n            })\n            .catch(error=>{\n                console.log(\"Error\",error);\n                swal({\n                    title: \"Error\",\n                    text: \"Invalid username or passward\",\n                    icon: \"error\",\n                    button: \"ok\",\n                  });\n            })            \n        }\n    },[errors])\n\n\n    return (\n<div className=\"container\">\n<div className=\"card shadow bg-transparent mt-3 text-white\">\n        <div className=\"card-body\">\n            <div className=\"row\">\n                <div className=\"col-sm-6 mx-auto\">\n                    <h4 className=\"text-center p-2\">\n                        Seller Login Form\n                    </h4>\n                    <form onSubmit={handleSubmit}>                 \n                    <div className=\"form-group form-row\">\n                        <label className=\"col-sm-4 form-control-label\">Email Id</label>\n                        <div className=\"col-sm-8\">\n                            <input type=\"text\" name=\"userid\" value={user.userid} onChange={handleInput} className=\"form-control\" />\n                            {errors.userid && <small className=\"text-danger float-right\">{errors.userid}</small>}\n                        </div>\n                        \n                    </div>                    \n                    <div className=\"form-group form-row\">\n                        <label className=\"col-sm-4 form-control-label\">Password</label>\n                        <div className=\"col-sm-8\">\n                            <input type=\"password\" name=\"pwd\" value={user.pwd} onChange={handleInput} className=\"form-control\" style={{}} />\n                            {errors.pwd && <small className=\"text-danger float-right\">{errors.pwd}</small>}\n                        </div>\n                    </div>                    \n                    <button className=\"btn btn-warning float-right\">Login Now</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n        </div>\n        </div>\n    );\n}\n\nexport default SellerLogin;","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport loginvalidation from \"../loginvalidation\";\r\nimport swal from \"sweetalert\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport \"./CustomerLogin.css\";\r\nimport axios from \"axios\";\r\nimport LoginPageImage from \"../assets/LoginPageImg.png\"\r\n\r\nfunction CustomerLogin() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [user, setUser] = useState({\r\n    userEmail: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const history = useHistory();\r\n\r\n  // State to toggle password visibility\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n\r\n  // Function to toggle password visibility\r\n  const togglePasswordVisibility = () => {\r\n    setIsPasswordVisible(!isPasswordVisible);\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    console.log(\"Input\");\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(loginvalidation(user));\r\n    setSubmitted(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch the packageName from the query parameter\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const packageName = queryParams.get(\"packageName\") || \"basic\";\r\n\r\n    // Store the packageName in localStorage\r\n    localStorage.setItem(\"packageName\", packageName);\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && submitted) {\r\n      axios\r\n        .post(`${process.env.REACT_APP_BASE_URL}/api/v1/auth/login`, user)\r\n        .then((resp) => {\r\n          const { accessToken, refreshToken, user } = resp.data;\r\n          const decoded = jwtDecode(accessToken);\r\n          const expiryTime = decoded.exp * 1000;\r\n          console.log(user);\r\n\r\n          localStorage.setItem(\"access_token\", accessToken);\r\n          localStorage.setItem(\"refresh_token\", refreshToken);\r\n          localStorage.setItem(\"expiry_time\", expiryTime);\r\n\r\n          dispatch({ type: \"IsLoggedIn\" });\r\n\r\n          const status = user.status;\r\n\r\n          switch (status) {\r\n            case \"remService\": history.push(\"/configuration\"); break;\r\n            case \"remAddress\": history.push(\"/address\"); break;\r\n            case \"remMandate\": history.push(\"/billing\"); break;\r\n            case \"active\": history.push(\"/cprofile\"); break;\r\n            default: history.push(\"/register\"); break;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error\", error);\r\n          swal({\r\n            title: \"Error\",\r\n            text: \"Invalid username or password\",\r\n            icon: \"error\",\r\n            button: \"ok\",\r\n          });\r\n        });\r\n    }\r\n  }, [errors, submitted, dispatch, history]);\r\n\r\n  const handleGoogleLoginSuccess = (credentialResponse) => {\r\n    const { credential } = credentialResponse;\r\n    axios\r\n      .post(`${process.env.REACT_APP_BASE_URL}/api/v1/auth/google-authenticate`, { token: credential })\r\n      // .post(\"https://d2hd3ezig1ozy6.cloudfront.net/api/v1/auth/google-authenticate\", { token: credential })\r\n      .then((resp) => {\r\n        const { access_token, refresh_token } = resp.data;\r\n        const decoded = jwtDecode(access_token);\r\n        const expiryTime = decoded.exp * 1000;\r\n\r\n        localStorage.setItem(\"access_token\", access_token);\r\n        localStorage.setItem(\"refresh_token\", refresh_token);\r\n        localStorage.setItem(\"expiry_time\", expiryTime);\r\n\r\n        dispatch({ type: \"IsLoggedIn\" });\r\n        history.push(\"/cprofile\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Google login failed\",\r\n          icon: \"error\",\r\n          button: \"ok\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleGoogleLoginError = () => {\r\n    console.log(\"Google login failed\");\r\n    swal({\r\n      title: \"Error\",\r\n      text: \"Google login failed\",\r\n      icon: \"error\",\r\n      button: \"ok\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"col-md-6 d-none d-md-block\">\r\n          <img\r\n            src={LoginPageImage}\r\n            alt=\"login\"\r\n            className=\"img-fluid\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 login-form\">\r\n          <h2 className=\"text-center\">Login to continue</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <span className=\"text-danger\">*</span>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                name=\"userEmail\"\r\n                placeholder=\"Enter email\"\r\n                style={{borderLeft: \"ridge\", borderLeftWidth: \"thin\"}}\r\n                value={user.userEmail}\r\n                onChange={handleInput}\r\n                required\r\n              />\r\n              {errors.userEmail && (\r\n                <small className=\"text-danger float-right\">\r\n                  {errors.userEmail}\r\n                </small>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"userEmail\" className=\"form-label\">\r\n                <span>Password</span>\r\n                <span className=\"text-danger\">*</span>\r\n              </label>\r\n\r\n              <div className=\"input-group\" style={{borderLeft: \"ridge\", borderLeftWidth: \"thin\"}}>\r\n                <input\r\n                  type={isPasswordVisible ? \"text\" : \"password\"}\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  value={user.password}\r\n                  onChange={handleInput}\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  className=\"form-control\"\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-secondary\"\r\n                    style={{ marginTop: \"0px\" }}\r\n                    onClick={togglePasswordVisibility}\r\n                  >\r\n                    <i className={isPasswordVisible ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {errors.password && <span className=\"error-message px-3\">{errors.password}</span>}\r\n            </div>\r\n\r\n            <div className=\"links\">\r\n              <a href=\"/forgotPassword\" className=\"btn btn-link p-0\">\r\n                Forgot Password?\r\n              </a>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n              LOGIN\r\n            </button>\r\n          </form>\r\n          <p className=\"text-center mt-3\">or sign up using</p>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <GoogleLogin\r\n              onSuccess={handleGoogleLoginSuccess}\r\n              onError={handleGoogleLoginError}\r\n            />\r\n\r\n          </div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <a href=\"/register\" className=\"btn btn-link p-0\">\r\n              Don't have an account? Sign up\r\n            </a>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerLogin;\r\n","import React from 'react';\nimport api from \"../util/axiosConfig\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nfunction MyProducts(){\n    const sellerid=sessionStorage.getItem(\"id\");\n    const [products,setProducts]=useState([])\n    useEffect(()=>{\n        api.get(\"/api/products?sellerid=\"+sellerid)\n        .then(resp=>{\n            console.log(resp.data)\n            setProducts(resp.data.data)\n            console.log(products)\n        })\n    },[])\n\n    const deleteProduct = (prodid)=>{\n        swal({\n            title: \"Delete product\",\n            text: \"Are you sure to delete this product ?\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((willDelete) => {\n            if (willDelete) {\n            api.delete(\"/api/products/\"+prodid)\n            .then(resp=>{\n                swal({\n                    title: \"Success\",\n                    text: \"Product deleted successfully\",\n                    icon: \"success\",\n                    button: \"ok\",\n                  });\n                api.get(\"/api/products?sellerid=\"+sellerid)\n                .then(resp=>{\n                    console.log(resp.data)\n                    setProducts(resp.data.data)\n                    console.log(products)\n                })\n            })            \n        } else {\n            swal(\"Product is not deleted!\");\n          }\n        });\n   }\n    \n   const StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 14,\n    },\n  }));\n  \n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    '&:last-child td, &:last-child th': {\n      border: 0,\n    },\n  }));\n\n    return (\n        <div className=\"container\">\n            <div className=\"card shadow bg-transparent text-white\">\n                <div className=\"card-body\">                    \n            <h4>My Products</h4>\n\n            <TableContainer component={Paper}>\n                    <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n                    <TableHead>\n                    <TableRow>\n                    <StyledTableCell align=\"center\">Name</StyledTableCell>\n                    <StyledTableCell align=\"center\">Category</StyledTableCell>\n                    <StyledTableCell align=\"center\">Sub Category</StyledTableCell>\n                    <StyledTableCell align=\"center\">Brand Name</StyledTableCell>\n                    <StyledTableCell align=\"center\">Price</StyledTableCell>\n                    <StyledTableCell align=\"center\">Action</StyledTableCell>\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>\n                     {products.map(x=>(\n                    <StyledTableRow  key={x.prodid}>\n                        <StyledTableCell align=\"center\"><img width=\"100\" src={`${process.env.REACT_APP_BASE_URL}`+x.photo} className=\"img-thumnail mr-3\" />{x.pname}</StyledTableCell>\n                        {/* <StyledTableCell align=\"center\"><img width=\"100\" src={\"http://localhost:8080/\"+x.photo} className=\"img-thumnail mr-3\" />{x.pname}</StyledTableCell> */}\n                        <StyledTableCell align=\"center\">{x.pcat}</StyledTableCell>\n                        <StyledTableCell align=\"center\">{x.subcat}</StyledTableCell>\n                        <StyledTableCell align=\"center\">{x.brand}</StyledTableCell>\n                        <StyledTableCell align=\"center\">&#8377; {x.price}</StyledTableCell>\n                        <StyledTableCell align=\"center\"><Link to={\"/edit/\"+x.prodid} className=\"btn btn-dark btn-sm mr-2\">Edit</Link>\n                            <button onClick={()=>deleteProduct(x.prodid)} className=\"btn btn-danger btn-sm\">Delete</button></StyledTableCell>\n                    </StyledTableRow>\n                ))}\n               </TableBody>\n            </Table>\n            </TableContainer>\n            </div>\n            </div>\n            </div>\n    )\n}\n\nexport default MyProducts;","import React from 'react';\r\nimport api from \"../util/axiosConfig\";\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useSelector } from 'react-redux';\r\nimport \"./ProfileSection.css\"\r\n\r\nfunction ProfileSection() {\r\n  const state = useSelector((state) => state);\r\n\r\n  const [userData, setUserData] = useState({\r\n    name: '',\r\n    phone: '',\r\n    altPhone: '',\r\n    businessName: '',\r\n    userEmail: '',\r\n    companyAddress: '',\r\n    billingAddress: ''\r\n  });\r\n\r\n\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    api.get(`/api/v1/user`, config)\r\n      .then(resp => {\r\n        console.log(resp)\r\n        setUserData({\r\n          name: [\r\n            resp.data.firstName,\r\n            resp.data.lastName\r\n          ].join(\" \"),\r\n          phone: resp.data.phone,\r\n          altPhone: resp.data.altPhone,\r\n          businessName: resp.data.businessName,\r\n          userEmail: resp.data.userEmail\r\n        });\r\n      }).then(\r\n        api.get(`/api/v1/address`, config)\r\n          .then(\r\n            resp => {\r\n              console.log(resp)\r\n              setUserData({\r\n                companyAddress: [\r\n                  resp.data.company_address?.line_1,\r\n                  resp.data.company_address?.line_2,\r\n                  resp.data.company_address?.city,\r\n                  resp.data.company_address?.district,\r\n                  resp.data.company_address?.county,\r\n                  resp.data.company_address?.country,\r\n                  resp.data.company_address?.post_code\r\n                ]\r\n                  .filter(Boolean)\r\n                  .join(\", \") || \"\",\r\n\r\n                billingAddress: [\r\n                  resp.data.billing_address?.line_1,\r\n                  resp.data.billing_address?.line_2,\r\n                  resp.data.billing_address?.city,\r\n                  resp.data.billing_address?.district,\r\n                  resp.data.billing_address?.county,\r\n                  resp.data.billing_address?.country,\r\n                  resp.data.billing_address?.post_code\r\n                ]\r\n                  .filter(Boolean)\r\n                  .join(\", \") || \"\"\r\n              })\r\n            }\r\n          )\r\n      )\r\n      .catch(error => {\r\n        console.log(\"Error\", error);\r\n      })\r\n  }, [state.loggedin.UserEmail])\r\n\r\n  // const handleSubmitProfile = {\r\n\r\n  // }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column row card shadow p-4 vh-100 w-100\">\r\n      <div id=\"Profile\" className=\"overflow-auto\">\r\n        <h2 className=\"mb-4\">Account Information</h2>\r\n        <hr />\r\n        <form>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"customerName\" className=\"form-label\">Customer Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"customerName\"\r\n              value={userData.name}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"businessName\" className=\"form-label\">Business Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"businessName\"\r\n              value={userData.businessName}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"email\" className=\"form-label\">Email Id</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              value={userData.userEmail}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"phone\" className=\"form-label\">Phone Number</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"phone\"\r\n              value={userData.phone}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"altPhone\" className=\"form-label\">Alternate Phone Number</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"altPhone\"\r\n              value={userData.altPhone}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"companyAddress\" className=\"form-label\">Company Address</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"companyAddress\"\r\n              rows=\"3\"\r\n              value={userData.companyAddress}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"billingAddress\" className=\"form-label\">Billing Address</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"billingAddress\"\r\n              rows=\"3\"\r\n              value={userData.billingAddress}\r\n              readOnly\r\n            />\r\n          </div>\r\n          {/* <button type=\"submit\" onClick={handleSubmitProfile} className=\"btn btn-primary btn-block\">Update Profile</button> */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default ProfileSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport api from \"../util/axiosConfig\";\r\nimport { Button } from '@mui/material';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions\r\n} from '@mui/material';\r\nimport './MyOrders.css'\r\n\r\nfunction MyOrders() {\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [details, setDetails] = useState([])\r\n    const [selectedOrder, setSelectedOrder] = useState(null);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n    const token = localStorage.getItem(\"access_token\");\r\n\r\n    const config = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        api.get(`/api/v1/order`, config).then(resp => {\r\n            console.log(resp.data);\r\n            setOrders(resp.data.orders)\r\n            // if (resp.data && resp.data.data && resp.data.data.details) {\r\n            //     setDetails(resp.data.data.details);\r\n            // } else {\r\n            //     console.error('Details not found in response:', resp);\r\n            //     setDetails(null);\r\n            // }\r\n        }).catch(error => {\r\n            console.error('Error fetching order details:', error);\r\n        });\r\n    }, [])\r\n\r\n\r\n    // const handleShowDetails = (order) => {\r\n    //     setSelectedOrder(order);\r\n    //     setModalOpen(true);\r\n    // };\r\n\r\n    const handleClose = () => {\r\n        setModalOpen(false);\r\n        setSelectedOrder(null);\r\n    };\r\n    // const handleShowReceipt = (order) => {\r\n    //     window.open(order.receipt, '_blank');\r\n    // };\r\n\r\n    return (\r\n        <div className=\"card shadow p-4 vh-100 w-100\">\r\n            <h2 className=\"mb-4\">Order History</h2>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Order ID</th>\r\n                            <th>Order Date</th>\r\n                            <th>Amount</th>\r\n                            <th>Payment Status</th>\r\n                            <th>Receipt</th>\r\n                            {/* <th>Actions</th> */}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map((order, index) => (\r\n                            <tr key={index + 1}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{order.createdAt.split(\"T\")[0]}</td>\r\n                                <td>{order.totalAmount.toFixed(2)}</td>\r\n                                <td>{order.paymentStatus}</td>\r\n                                <td>\r\n                                    {/* <Button color=\"primary\" onClick={() => handleShowReceipt(order)}>\r\n                                Show Receipt\r\n                            </Button> */}\r\n                                    {order.receipt ? <a href={order.receipt} target='_blank' rel='noopener noreferrer'>Show Receipt</a> : \"No receipt available yet...\"}\r\n                                </td>\r\n                                {/* <td>\r\n                            <Button color=\"primary\" onClick={() => handleShowDetails(order)}>\r\n                                Show Order Details\r\n                            </Button>\r\n                        </td> */}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            {/* <Dialog open={modalOpen} onClose={handleClose}>\r\n        <DialogTitle>Order Details</DialogTitle>\r\n        <DialogContent>\r\n            {selectedOrder && (\r\n                <div>\r\n                    <p><strong>Order ID:</strong> {selectedOrder._id}</p>\r\n                    <p><strong>Order Date:</strong> {selectedOrder.createdAt.split(\"T\")[0]}</p>\r\n                    <p><strong>Amount:</strong> {selectedOrder.totalAmount.toFixed(2)}</p>\r\n                    <p><strong>Details:</strong> {selectedOrder.order}</p>\r\n                </div>\r\n            )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n                Close\r\n            </Button>\r\n        </DialogActions>\r\n    </Dialog> */}\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default MyOrders;","\r\nimport api from \"../util/axiosConfig\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Billing.css\";\r\n\r\nconst BillingSection = () => {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const state = useSelector((state) => state);\r\n  const [services, setServices] = useState({\r\n\r\n  });\r\n  const [totalCost, setTotalCost] = useState(0);\r\n  const [address, setAddress] = useState({\r\n\r\n  });\r\n\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const billingInfo = {\r\n    description: \"test description\",\r\n    amount: totalCost * 100,\r\n    currency: \"GBP\",\r\n    appFee: 500,\r\n    mandateScheme: \"bacs\"\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(billingInfo);\r\n    api\r\n      .post(\"/api/v1/mandate/billing\", billingInfo, config)\r\n      .then((resp) => {\r\n        console.log(resp.data);\r\n        window.location.href = resp.data.authorisationUrl;\r\n        setSubmitted(false);\r\n      });\r\n  };\r\n\r\n  const calculateTotalCost = () => {\r\n    const total =\r\n      services.pstnCost * 40 +\r\n      services.adslCost * 33 +\r\n      services.callRecordingCost * 5 +\r\n      services.annexRental * 35 +\r\n      services.faxToEmailCost * 5;\r\n    setTotalCost(total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(`/api/v1/services`, config)\r\n      .then((resp) => {\r\n        console.log(resp.data)\r\n        setServices(resp.data.service);\r\n        calculateTotalCost();\r\n      })\r\n      .catch((error) => {\r\n        swal({\r\n          title: 'Error',\r\n          text: error.message,\r\n          icon: 'error',\r\n          button: 'ok',\r\n        });\r\n      });\r\n  }, [state.loggedin.UserEmail]);\r\n\r\n  useEffect(() => {\r\n    calculateTotalCost();\r\n  }, [services]);\r\n\r\n  return (\r\n    <div className=\"card shadow p-4 vh-100 w-100\">\r\n      <h2 className=\"mb-4\">Billing Details</h2>\r\n      <hr />\r\n      <div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default BillingSection;","import React, { useState } from 'react';\r\nimport ProfileSection from './ProfileSection';\r\nimport MyOrders from './MyOrders';\r\nimport BillingSection from './BillingSection';\r\n\r\nfunction CustomerProfile() {\r\n  const [activeComponent, setActiveComponent] = useState('ProfileSection');\r\n\r\n  const renderComponent = () => {\r\n    switch (activeComponent) {\r\n      case 'ProfileSection':\r\n        return <ProfileSection />;\r\n      case 'MyOrders':\r\n        return <MyOrders />;\r\n      case 'BillingSection':\r\n        return <BillingSection />;\r\n      default:\r\n        return <ProfileSection />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2 col-12 border-end d-flex flex-column justify-content-start align-items-start px-3 py-4\">\r\n          {/* <h4 className=\"mt-3 mb-4 d-none d-md-block\">Account Information</h4> */}\r\n          <div className=\"nav flex-column nav-pills w-100\">\r\n            <button\r\n              className={`nav-link text-start ${activeComponent === 'ProfileSection' ? 'active' : ''}`}\r\n              onClick={() => setActiveComponent('ProfileSection')}\r\n            >\r\n              <i className=\"fw-bold me-2\"></i>\r\n              Account Details\r\n              <small className=\"d-block text-black d-none d-md-block\">Manage your account details</small>\r\n            </button>\r\n\r\n            <button\r\n              className={`nav-link text-start ${activeComponent === 'MyOrders' ? 'active' : ''}`}\r\n              onClick={() => setActiveComponent('MyOrders')}\r\n            >\r\n              <i className=\"me-2\"></i>\r\n              Handset Order History\r\n              <small className=\"d-block text-black d-none d-md-block\">Track your past purchases</small>\r\n            </button>\r\n\r\n            <button\r\n              className={`nav-link text-start ${activeComponent === 'BillingSection' ? 'active' : ''}`}\r\n              onClick={() => setActiveComponent('BillingSection')}\r\n            >\r\n              <i className=\"me-2\"></i>\r\n              Billing Details\r\n              <small className=\"d-block text-black d-none d-md-block\">Manage your bills</small>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-10 col-12\">\r\n          {renderComponent()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default CustomerProfile;","import React from 'react';\nimport api from \"../util/axiosConfig\";\nimport { useEffect, useState } from \"react\";\nimport Moment from \"react-moment\";\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nfunction Orders() {\n    const [orders, setOrders] = useState([])\n    const [show, setShow] = useState(false)\n    const [details, setDetails] = useState([])\n\n    useEffect(() => {\n        api.get(\"/api/orders\")\n            .then(resp => {\n                console.log(resp.data)\n                setOrders(resp.data.data)\n            })\n    }, []);\n\n    const showDetails = (orderid) => {\n        api.get(\"/api/orders/\" + orderid)\n            .then(resp => {\n                console.log(resp.data)\n                setDetails(resp.data.data.details)\n            })\n        setShow(true)\n    }\n    const StyledTableCell = styled(TableCell)(({ theme }) => ({\n        [`&.${tableCellClasses.head}`]: {\n            backgroundColor: theme.palette.common.black,\n            color: theme.palette.common.white,\n        },\n        [`&.${tableCellClasses.body}`]: {\n            fontSize: 14,\n        },\n    }));\n\n    const StyledTableRow = styled(TableRow)(({ theme }) => ({\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n        // hide last border\n        '&:last-child td, &:last-child th': {\n            border: 0,\n        },\n    }));\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-sm-6\">\n                    <h4 className=\"p-2 text-center text-white\">Orders</h4>\n\n\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n                            <TableHead>\n                                <TableRow>\n                                    <StyledTableCell align=\"center\">Id</StyledTableCell>\n                                    <StyledTableCell align=\"center\">Order Date</StyledTableCell>\n                                    <StyledTableCell align=\"center\">Amount</StyledTableCell>\n                                    <StyledTableCell align=\"center\">Customer</StyledTableCell>\n                                    <StyledTableCell align=\"center\">Action</StyledTableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {orders.map((x) => (\n                                    <StyledTableRow key={x.orderid}>\n                                        <StyledTableCell align=\"center\">{x.orderid}</StyledTableCell>\n                                        <StyledTableCell align=\"center\"><Moment format=\"ddd, DD-MMM-YYYY\">{x.orderDate}</Moment></StyledTableCell>\n                                        <StyledTableCell align=\"center\">&#8377; {x.payment.amount}</StyledTableCell>\n                                        <StyledTableCell align=\"center\">{x.customer.name}</StyledTableCell>\n                                        <StyledTableCell align=\"center\"><button onClick={e => showDetails(x.orderid)} className=\"btn btn-dark btn-sm\">Show Details</button></StyledTableCell>\n                                    </StyledTableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n\n                <div className=\"col-sm-6\">\n                    {show ? <>\n                        <h4 className=\"p-2 text-center text-white\">Order Details</h4>\n                        <TableContainer component={Paper}>\n                            <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <StyledTableCell align=\"center\">Id</StyledTableCell>\n                                        <StyledTableCell align=\"center\">Photo</StyledTableCell>\n                                        <StyledTableCell align=\"center\">Product</StyledTableCell>\n                                        <StyledTableCell align=\"center\">Price</StyledTableCell>\n                                        <StyledTableCell align=\"center\">Quantity</StyledTableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {details.map(x => (\n                                        <StyledTableRow key={x.product.prodid}>\n                                            <StyledTableCell align=\"center\">{x.product.prodid}</StyledTableCell>\n                                            <StyledTableCell align=\"center\"><img src={`${process.env.REACT_APP_BASE_URL}/` + x.product.photo} width=\"80\" /></StyledTableCell>\n                                            <StyledTableCell align=\"center\" ><h5>{x.product.pname}</h5>\n                                                Category: {x.product.pcat}<br />\n                                                Brand: {x.product.brand}<br />\n                                            </StyledTableCell>\n                                            <StyledTableCell align=\"center\">&#8377; {x.product.price}</StyledTableCell>\n                                            <StyledTableCell align=\"center\">{x.qty}</StyledTableCell>\n                                        </StyledTableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </> : ''}\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Orders;","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport api from \"../util/axiosConfig\";\r\nimport './ViewCart.css'; // Import the new CSS file\r\nimport './RegCustomer.css';\r\n\r\nconst modalStyle = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4\r\n};\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nfunction ViewCart() {\r\n\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const [newAddress, setNewAddress] = useState('');\r\n\r\n  const [payment, setPayment] = useState({\r\n    amount: state.cart.reduce((a, b) => a + parseInt(b.retail_price) * parseInt(b.qty), 0)\r\n  });\r\n\r\n  const [userData, setUserData] = useState({\r\n    companyAddress: '',\r\n    billingAddress: '',\r\n    deliveryAddress: ''\r\n  });\r\n\r\n\r\n\r\n\r\n  const [selectedAddress, setSelectedAddress] = useState('company');\r\n\r\n  const handleAddressChange = (event) => {\r\n    setSelectedAddress(event.target.value);\r\n\r\n  };\r\n\r\n  // const handleSubmitAddress = (event) => {\r\n  //   event.preventDefault();\r\n  //   handleClose(); \r\n  // };\r\n\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    api.get(`/api/v1/user`, config)\r\n      .then(resp => {\r\n        console.log(resp)\r\n        setUserData({\r\n          name: [\r\n            resp.data.firstName,\r\n            resp.data.lastName\r\n          ].join(\" \"),\r\n          phone: resp.data.phone,\r\n          altPhone: resp.data.altPhone,\r\n          businessName: resp.data.businessName,\r\n          userEmail: resp.data.userEmail\r\n        });\r\n      }).then(\r\n        api.get(`/api/v1/address`, config)\r\n          .then(\r\n            resp => {\r\n              console.log(resp)\r\n              setUserData({\r\n                companyAddress: [\r\n                  resp.data.company_address?.line_1,\r\n                  resp.data.company_address?.line_2,\r\n                  resp.data.company_address?.city,\r\n                  resp.data.company_address?.district,\r\n                  resp.data.company_address?.county,\r\n                  resp.data.company_address?.country,\r\n                  resp.data.company_address?.post_code\r\n                ]\r\n                  .filter(Boolean)\r\n                  .join(\", \") || \"\",\r\n\r\n                deliveryAddress: [\r\n                  resp.data.delivery_address?.line_1,\r\n                  resp.data.delivery_address?.line_2,\r\n                  resp.data.delivery_address?.city,\r\n                  resp.data.delivery_address?.district,\r\n                  resp.data.delivery_address?.county,\r\n                  resp.data.delivery_address?.country,\r\n                  resp.data.delivery_address?.post_code\r\n                ]\r\n                  .filter(Boolean)\r\n                  .join(\", \") || \"\",\r\n\r\n                billingAddress: [\r\n                  resp.data.billing_address?.line_1,\r\n                  resp.data.billing_address?.line_2,\r\n                  resp.data.billing_address?.city,\r\n                  resp.data.billing_address?.district,\r\n                  resp.data.billing_address?.county,\r\n                  resp.data.billing_address?.country,\r\n                  resp.data.billing_address?.post_code\r\n                ]\r\n                  .filter(Boolean)\r\n                  .join(\", \") || \"\"\r\n              })\r\n            }\r\n          )\r\n      )\r\n      .catch(error => {\r\n        console.log(\"Error\", error);\r\n      })\r\n  }, [state.loggedin.UserEmail])\r\n\r\n\r\n  const deleteItem = (item) => {\r\n    swal({\r\n      title: \"Delete item\",\r\n      text: \"Are you sure to delete this item?\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        dispatch({ type: \"RemoveItem\", payload: item });\r\n        let amount = state.cart.reduce(\r\n          (a, b) => a + parseInt(b.retail_price) * parseInt(b.qty),\r\n          0\r\n        );\r\n        setPayment({ ...payment, amount });\r\n        swal(\"Item has been deleted!\", {\r\n          icon: \"success\",\r\n        });\r\n      } else {\r\n        swal(\"Item is not deleted!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let amount = state.cart.reduce((a, b) => a + parseInt(b.retail_price) * parseInt(b.qty), 0);\r\n    setPayment({ amount });\r\n  }, [state.cart]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let amount = state.cart.reduce((a, b) => a + parseInt(b.retail_price) * parseInt(b.qty), 0);\r\n    setPayment({ amount });\r\n    const chosenAddress = selectedAddress === 'company'\r\n      ? userData.companyAddress\r\n      : selectedAddress === 'billing'\r\n        ? userData.billingAddress\r\n        : selectedAddress === 'delivery'\r\n          ? userData.deliveryAddress\r\n          : newAddress; // Use newAddress if 'new' is selected\r\n\r\n    console.log('Selected delivery address:', chosenAddress);\r\n\r\n    let data = {\r\n      cart: state.cart,\r\n      address: chosenAddress\r\n    };\r\n\r\n    // Get JWT token from localStorage\r\n    const token = localStorage.getItem(\"access_token\");\r\n\r\n    // Axios POST request configuration\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // Adding JWT token to Authorization header\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    console.log(data);\r\n    console.log(state.cart)\r\n    // Make POST request with Axios\r\n    api\r\n      .post(\"api/v1/order\", data, config)\r\n      .then((resp) => {\r\n        window.location.href = resp.data.sessionUrl;\r\n        console.log(\"redirected\");\r\n        // Redirect to the payment page\r\n      })\r\n      .catch((error) => {\r\n        // Handle error\r\n        console.error(\"Error placing order:\", error);\r\n        // Optionally show an error message to the user\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Failed to place order. Please try again later.\",\r\n          icon: \"error\",\r\n          button: \"Ok\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div className=\"container-fluid bg-light py-5\">\r\n      <div className=\"card shadow-lg border-0 rounded-lg \">\r\n        <div className=\"card-header text-black\">\r\n          <h3 className=\"mb-0 text-center\">Your Shopping Cart</h3>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          {state.cart.length > 0 ? (\r\n            <>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-hover\">\r\n                  <thead className=\"bg-primary text-white\">\r\n                    <tr>\r\n                      <th>Product Id</th>\r\n                      <th>Product Photo</th>\r\n                      <th>Product Name</th>\r\n                      <th>Price</th>\r\n                      <th>Quantity</th>\r\n                      <th>Amount</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {state.cart.map((item) => (\r\n                      <tr key={item.item}>\r\n                        <td>{item.item}</td>\r\n                        <td>\r\n                          <img\r\n                            className=\"img-fluid product-image\"\r\n                            src={item.image_url || \"https://upload.wikimedia.org/wikipedia/commons/d/d1/Image_not_available.png\"}\r\n                            alt=\"product\"\r\n                          />\r\n                        </td>\r\n                        <td>{item.item}</td>\r\n                        <td>&pound; {parseInt(item.retail_price)}</td>\r\n                        <td>{item.qty}</td>\r\n                        <td>&pound; {item.qty * parseInt(item.retail_price)}</td>\r\n                        <td>\r\n                          <button\r\n                            onClick={() => deleteItem(item)}\r\n                            className=\"btn btn-outline-danger btn-sm\"\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                  <tfoot>\r\n                    <tr className=\"bg-light\">\r\n                      <td colSpan=\"5\" className=\"text-end\"><strong>Total Amount</strong></td>\r\n                      <td colSpan=\"2\">\r\n                        <strong>&pound; {state.cart.reduce((a, b) => a + parseInt(b.retail_price) * parseInt(b.qty), 0)}</strong>\r\n                      </td>\r\n                    </tr>\r\n                  </tfoot>\r\n                </table>\r\n                <span>\r\n                  <span className=\"text-danger\">*</span>The total payable amount will include a 20% VAT.\r\n                </span>\r\n              </div>\r\n              <div className=\"text-center mt-4\">\r\n                <button onClick={handleOpen} className=\"btn btn-primary btn-lg\">\r\n                  Enter Address and Place Order\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"text-center py-5\">\r\n              <h4 className=\"text-muted\">Your Cart is Empty</h4>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box\r\n          sx={modalStyle}\r\n          className=\"bg-white p-4 rounded-lg shadow-lg\"\r\n          style={{\r\n            width: '100%',\r\n            maxWidth: '500px',\r\n            margin: '20px auto', // Center the modal on small screens\r\n            overflowY: 'auto', // Add scroll for overflow content\r\n            maxHeight: '90vh', // Ensure modal doesn't go beyond screen height\r\n          }}\r\n        >\r\n          <h3 className=\"text-center mb-4 font-weight-bold\">Choose Address for Delivery</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            {['company', 'billing', 'delivery'].map((type) => (\r\n              <div key={type} className=\"mb-4\">\r\n                <div className=\"custom-control custom-radio\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    id={`${type}Address`}\r\n                    name=\"deliveryAddress\"\r\n                    className=\"custom-control-input\"\r\n                    checked={selectedAddress === type}\r\n                    onChange={handleAddressChange}\r\n                    value={type}\r\n                  />\r\n                  <label className=\"custom-control-label font-weight-bold\" htmlFor={`${type}Address`}>\r\n                    {type.charAt(0).toUpperCase() + type.slice(1)} Address\r\n                  </label>\r\n                </div>\r\n                <div className=\"mt-2 p-3 bg-light rounded shadow-sm\">\r\n                  <small>{userData[`${type}Address`]}</small>\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            {/* New Address Option */}\r\n            <div className=\"mb-4\">\r\n              <div className=\"custom-control custom-radio\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"newAddress\"\r\n                  name=\"deliveryAddress\"\r\n                  className=\"custom-control-input\"\r\n                  checked={selectedAddress === 'new'}\r\n                  onChange={handleAddressChange}\r\n                  value=\"new\"\r\n                />\r\n                <label className=\"custom-control-label font-weight-bold\" htmlFor=\"newAddress\">\r\n                  Use a different address\r\n                </label>\r\n              </div>\r\n              {selectedAddress === 'new' && (\r\n                <textarea\r\n                  className=\"form-control mt-2\"\r\n                  rows=\"3\"\r\n                  placeholder=\"Enter your new delivery address here\"\r\n                  value={newAddress}\r\n                  onChange={(e) => setNewAddress(e.target.value)}\r\n                  style={{ width: '100%', boxSizing: 'border-box' }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"text-center mt-4\">\r\n              <button type=\"submit\" className=\"btn btn-primary btn-block py-2\">\r\n                Proceed to Checkout\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Box>\r\n      </Modal>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewCart;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport api from \"../util/axiosConfig\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n  const [data, setData] = useState({\r\n    userEmail: \"\",\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    setData({\r\n      ...data,\r\n      [e.target.name]: value,\r\n    });\r\n  };\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // const userData = {\r\n    //   userEmail: email,\r\n    // };\r\n\r\n    axios.post(`${process.env.REACT_APP_BASE_URL}/api/v1/auth/forgot-password`, data)\r\n      .then((response) => {\r\n        console.log(response);\r\n        JSON.stringify(response);\r\n        swal({\r\n          title: \"Success\",\r\n          text: \"Password is successfully sent to your email address\",\r\n          icon: \"success\",\r\n          button: \"OK\",\r\n        }).then(() => {\r\n          history.push(\"/clogin\");\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Please enter a correct email address\",\r\n          icon: \"error\",\r\n          button: \"OK\",\r\n        }).then(() => {\r\n          history.push(\"/forgotPassword\");\r\n        });;\r\n      });\r\n  };\r\n\r\nreturn (\r\n  <div className=\"container d-flex justify-content-center align-items-center vh-100\">\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6 d-flex justify-content-center align-items-center\">\r\n        <img className=\"bg-light\" style={{ width: '600px', height: '800px' }}>\r\n        </img>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <div className=\"card p-4\">\r\n          <h2 className=\"text-center mb-4\">Forgot Password</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"userEmail\"\r\n                value={data.userEmail}\r\n                onChange={handleChange}\r\n                className=\"form-control mt-1\"\r\n                placeholder=\"Please Enter Your Email\"\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block mt-4\">\r\n              Reset Password\r\n            </button>\r\n            <div className=\"text-center mt-3\">\r\n              <Link to=\"/clogin\">Back to Login</Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n);\r\n};\r\nexport default ForgotPassword;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faFacebook,\r\n  faTwitter,\r\n  faYoutube,\r\n  faInstagram,\r\n  faLinkedin\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport logo from \"../PineVox-Horizontal-bw.svg\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"w-100\">\r\n      <footer className=\"mt-3\" style={{ backgroundColor: '#2c2f54', color: '#ffffff' }}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <a href=\"https://pinevox.com/\" style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n                <img src={logo} alt=\"PineVox\" style={{ height: '60px' }} />\r\n              </a>\r\n              <p>Your all weather communication partner</p>\r\n              <div className=\"mt-2 pb-3 pb-md-0\">\r\n                <a href=\"https://www.facebook.com/people/PineVox/100093473274083/\" className=\"text-white mr-4\">\r\n                  <FontAwesomeIcon icon={faFacebook} />\r\n                </a>\r\n                <a href=\"https://twitter.com/pinevox\" className=\"text-white mr-4\">\r\n                  <FontAwesomeIcon icon={faTwitter} />\r\n                </a>\r\n                <a href=\"https://www.youtube.com/@pinevox\" className=\"text-white mr-4\">\r\n                  <FontAwesomeIcon icon={faYoutube} />\r\n                </a>\r\n                <a href=\"https://www.instagram.com/pinevox?r=nametag\" className=\"text-white mr-4\">\r\n                  <FontAwesomeIcon icon={faInstagram} />\r\n                </a>\r\n                <a href=\"https://www.linkedin.com/company/pinevox/\" className=\"text-white mr-4\">\r\n                  <FontAwesomeIcon icon={faLinkedin} />\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 text-md-right\">\r\n              <h5 className=\"pt-3 d-none d-md-block\">Get in Touch</h5>\r\n              <a href=\"https://maps.app.goo.gl/geFbcYcvkNkE8akP6\" className=\"text-white d-block d-md-inline-block mb-md-2\">\r\n                Havelock Hub, 14 Havelock Place, Harrow, London HA1 1LJ\r\n              </a>\r\n              <p className=\"mb-md-2 mb-md-0\">+44 330 179 6233</p>\r\n              <a href=\"mailto:hello@pinevox.com\" style={{ color: '#ffffff' }}>hello@pinevox.com</a>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-center mt-3 pb-3\">\r\n            <p> 2024 PineVox | <a href=\"https://pinevox.com/privacy-policy/\" style={{ color: '#ffffff' }}>Privacy Policy</a></p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport api from \"../util/axiosConfig.js\";\r\nimport ProgressBar from \"./ProgressBar.jsx\";\r\nimport axios from \"axios\";\r\n\r\nconst Address = () => {\r\n  const apiKey = \"CvmjTpTwWUedB8nNMCKxXQ43497\";\r\n  const [selectedPlan, setSelectedPlan] = useState('Basic');\r\n  const [address, setAddress] = useState({\r\n    company_address: { post_code: \"\" },\r\n    billing_address: { post_code: \"\" },\r\n    delivery_address: { post_code: \"\" }\r\n  });\r\n  const [suggestions, setSuggestions] = useState({\r\n    company_address: [],\r\n    billing_address: [],\r\n    delivery_address: []\r\n  });\r\n  const [expanded, setExpanded] = useState({\r\n    company_address: false,\r\n    billing_address: false,\r\n    delivery_address: false\r\n  });\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(3);\r\n  const [isBillingCopied, setIsBillingCopied] = useState(false);\r\n  const [isDeliveryCopied, setIsDeliveryCopied] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handlePostcodeChange = (e, type) => {\r\n    const { value } = e.target;\r\n    setAddress(prev => ({\r\n      ...prev,\r\n      [type]: { ...prev[type], post_code: value }\r\n    }));\r\n    if (value.length > 2) {\r\n      callApi(value, type);\r\n    } else {\r\n      setSuggestions(prev => ({ ...prev, [type]: [] }));\r\n    }\r\n  };\r\n\r\n  const handleSuggestionClick = async (suggestion, type) => {\r\n    const { id } = suggestion;\r\n    const getAddressUrl = `https://api.getAddress.io/get/${id}?api-key=${apiKey}`;\r\n\r\n    try {\r\n      const resp = await axios.get(getAddressUrl);\r\n      const addressDetails = resp.data;\r\n      setAddress(prev => ({\r\n        ...prev,\r\n        [type]: {\r\n          line_1: addressDetails.line_1,\r\n          line_2: addressDetails.line_2 || \"\",\r\n          city: addressDetails.town_or_city,\r\n          district: addressDetails.county,\r\n          county: addressDetails.county,\r\n          country: addressDetails.country,\r\n          post_code: addressDetails.postcode,\r\n        }\r\n      }));\r\n      setSuggestions(prev => ({ ...prev, [type]: [] }));\r\n      setExpanded(prev => ({ ...prev, [type]: true }));\r\n    } catch (error) {\r\n      console.error(\"Error fetching address details:\", error);\r\n    }\r\n  };\r\n\r\n  const callApi = (searchText, type) => {\r\n    const url = `https://api.getAddress.io/autocomplete/${searchText}?api-key=${apiKey}`;\r\n\r\n    axios.get(url)\r\n      .then(resp => {\r\n        setSuggestions(prev => ({ ...prev, [type]: resp.data.suggestions }));\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (submitted && address) {\r\n      api.post(\"api/v1/address\", { address })\r\n        .then(() => {\r\n          swal({\r\n            title: \"Success\",\r\n            text: \"Address added successfully\",\r\n            icon: \"success\",\r\n            button: \"OK\",\r\n          });\r\n          history.push(\"/billing\");\r\n        })\r\n        .catch(error => {\r\n          console.error(\"API call error:\", error);\r\n          swal({\r\n            title: \"Error\",\r\n            text: error.message,\r\n            icon: \"error\",\r\n            button: \"OK\",\r\n          });\r\n        })\r\n        .finally(() => {\r\n          setSubmitted(false);\r\n        });\r\n    }\r\n  }, [submitted, address, history]);\r\n\r\n  const copyOrClearCompanyAddress = (type, isCopied) => {\r\n    if (isCopied) {\r\n      setAddress(prev => ({\r\n        ...prev,\r\n        [type]: { ...prev.company_address }\r\n      }));\r\n    } else {\r\n      setAddress(prev => ({\r\n        ...prev,\r\n        [type]: { post_code: \"\", line_1: \"\", line_2: \"\", city: \"\", district: \"\", county: \"\", country: \"\" }\r\n      }));\r\n    }\r\n  };\r\n\r\n  const renderAddressSection = (type, title, isCopyable = false, isCopied = false, setIsCopied = () => { }) => (\r\n    <div className=\"card mb-3\" style={{ borderRadius: '1rem' }}>\r\n      <div className=\"card-header text-white\" style={{ backgroundColor: '#3e97f7', borderRadius: '1rem' }} onClick={() => setExpanded(prev => ({ ...prev, [type]: !prev[type] }))}>\r\n        <h5 className=\"mb-0 d-flex justify-content-between align-items-center\">\r\n          {title}\r\n          <span>{expanded[type] ? '▲' : '▼'}</span>\r\n        </h5>\r\n      </div>\r\n      <div className={`card-body ${expanded[type] ? 'show' : 'collapse'}`}>\r\n        {isCopyable && (\r\n          <div className=\"form-check form-check-inline\" style={{paddingBottom: \"1rem\"}}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              style={{width:\"1rem\"}}\r\n              type=\"checkbox\"\r\n              name={`copy-${type}`}\r\n              id={`copy-${type}`}\r\n              checked={isCopied}\r\n              onChange={(e) => {\r\n                const checked = e.target.checked;\r\n                setIsCopied(checked);\r\n                copyOrClearCompanyAddress(type, checked);\r\n              }}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={`copy-${type}`}>\r\n              Same as Company Address\r\n            </label>\r\n          </div>\r\n        )}\r\n        <div className=\"form-group position-relative\">\r\n          <label>Postcode<span className=\"text-danger\">*</span></label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={address[type].post_code}\r\n            onChange={(e) => handlePostcodeChange(e, type)}\r\n            required\r\n          />\r\n          {suggestions[type].length > 0 && (\r\n            <ul className=\"list-group position-absolute w-100\" style={{ zIndex: 99 }}>\r\n              {suggestions[type].map((suggestion, index) => (\r\n                <li\r\n                  key={index}\r\n                  className=\"list-group-item list-group-item-action\"\r\n                  style={{ backgroundColor: '#e6e8eb' }}\r\n                  onClick={() => handleSuggestionClick(suggestion, type)}\r\n                >\r\n                  {suggestion.address}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n        {expanded[type] && (\r\n          <>\r\n            {['line_1', 'line_2', 'city', 'district', 'county', 'country'].map(field => (\r\n              <div className=\"form-group\" key={field}>\r\n                <label>\r\n                  {field === 'line_1' ? 'Address Line 1' :\r\n                    field === 'line_2' ? 'Address Line 2' :\r\n                      field.replace('_', ' ').charAt(0).toUpperCase() + field.slice(1)}\r\n                  {field !== 'line_2' && <span className=\"text-danger\">*</span>}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={address[type][field] || ''}\r\n                  onChange={(e) => setAddress(prev => ({\r\n                    ...prev,\r\n                    [type]: { ...prev[type], [field]: e.target.value }\r\n                  }))}\r\n                  required={field !== 'line_2'}\r\n                />\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container py-5\">\r\n      <ProgressBar currentStep={currentStep} />\r\n      <div className=\"card shadow\">\r\n        <div className=\"card-body\">\r\n          <div className=\"mb-4 border-bottom pb-2 d-flex justify-content-between\">\r\n            <h4>Please fill the address details below</h4>\r\n            <h4>Selected plan: <span className=\"\">{selectedPlan}</span></h4>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            {renderAddressSection('company_address', 'Company Address')}\r\n            {renderAddressSection('billing_address', 'Billing Address', true, isBillingCopied, setIsBillingCopied)}\r\n            {renderAddressSection('delivery_address', 'Delivery Address', true, isDeliveryCopied, setIsDeliveryCopied)}\r\n            <div className=\"text-center mt-4\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-lg px-4 rounded-pill shadow-sm me-0 me-md-3 w-100 w-md-auto\"\r\n              >\r\n                Proceed\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Address;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport api from \"../util/axiosConfig\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProgressBar from \"./ProgressBar.jsx\"\r\n\r\nconst Configuration = () => {\r\n    const history = useHistory();\r\n    const state = useSelector((state) => state);\r\n    const [numUsers, setNumUsers] = useState(0);\r\n    const [existingNumber, setExistingNumber] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [selectedPlan, setSelectedPlan] = useState('Basic')\r\n    const [currentStep, setCurrentStep] = useState(2);\r\n    const [additionalServices, setAdditionalServices] = useState({\r\n        userCount: 0,\r\n        pstnCost: 0,\r\n        adslCost: 0,\r\n        callRecordingCost: 0,\r\n        annexRental: 0,\r\n        faxToEmailCost: 0,\r\n        newNumber: existingNumber\r\n    });\r\n\r\n    // useEffect(() => {\r\n    //     setAdditionalServices((prev) => ({\r\n    //         ...prev,\r\n    //         userEmail: state.loggedin.UserEmail\r\n    //     }));\r\n    // }, [state.loggedin.userEmail]);\r\n\r\n    const handleServiceChange = (service, value) => {\r\n        setAdditionalServices((prev) => ({\r\n            ...prev,\r\n            [service]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setAdditionalServices((prev) => ({\r\n            ...prev,\r\n            userCount: numUsers\r\n        }));\r\n        setSubmitted(true);\r\n    };\r\n    // const handleSubmit = (event) => {\r\n    //     event.preventDefault();\r\n    //     handleServiceChange();\r\n    // if (numUsers === 0) {\r\n    //     swal({\r\n    //         title: 'Error',\r\n    //         text: 'Number of Users is required and must be greater than 0',\r\n    //         icon: 'error',\r\n    //         button: 'OK',\r\n    //     });\r\n    //     return;\r\n    // }\r\n    // setAdditionalServices((prev) => ({\r\n    //     ...prev,\r\n    //     userCount: numUsers\r\n    // }));\r\n    // if (currentStep < 4) {\r\n    //     setCurrentStep(currentStep + 1);\r\n    // }\r\n    //     setSubmitted(true);\r\n    // };\r\n\r\n    //Page skip functionality\r\n    // const handleSkip = () => {\r\n    //     if (numUsers === 0) {\r\n    //         swal({\r\n    //             title: 'Error',\r\n    //             text: 'Number of Users is required and must be greater than 0',\r\n    //             icon: 'error',\r\n    //             button: 'OK',\r\n    //         });\r\n    //         return;\r\n    //     }\r\n    //     setAdditionalServices({\r\n    //         userCount: numUsers,\r\n    //         pstnCost: 0,\r\n    //         adslCost: 0,\r\n    //         callRecordingCost: 0,\r\n    //         annexRental: 0,\r\n    //         faxToEmailCost: 0,\r\n    //         newNumber: existingNumber\r\n    //     });\r\n    //     setSubmitted(true);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        if (submitted) {\r\n            console.log('Making API call with user data:', additionalServices);\r\n            api\r\n                .post('api/v1/services', additionalServices)\r\n                .then((resp) => {\r\n                    history.push('/address');\r\n                })\r\n                .catch((error) => {\r\n                    console.error('API call error:', error);\r\n                    swal({\r\n                        title: 'Error',\r\n                        text: error.message,\r\n                        icon: 'error',\r\n                        button: 'ok',\r\n                    });\r\n                })\r\n                .finally(() => {\r\n                    setSubmitted(false);\r\n                });\r\n        } else {\r\n            console.log('Errors detected, not making API call');\r\n        }\r\n    }, [additionalServices, history]);\r\n\r\n    return (\r\n        <div className=\"container py-5\">\r\n            <ProgressBar currentStep={currentStep} />\r\n            <div className=\"card shadow\">\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"mb-4 border-bottom pb-2 d-flex flex-column flex-md-row justify-content-between\">\r\n                            <h4 className=\"mb-2 mb-md-0\">Please fill the following details</h4>\r\n                            <h4 className=\"mb-2 mb-md-0\">\r\n                                Selected plan: <span>{selectedPlan}</span>\r\n                            </h4>\r\n                        </div>\r\n\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6 mb-3 mb-md-0\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"userCount\" className=\"form-label\">\r\n                                        Number of Users: <span className=\"text-danger\">*</span>\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        min=\"1\"\r\n                                        id=\"userCount\"\r\n                                        className=\"form-control form-control-sm\"\r\n                                        value={numUsers}\r\n                                        onChange={(e) => setNumUsers(parseInt(e.target.value))}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label className=\"form-label\">Existing Number:</label>\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <div className=\"form-check\">\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            id=\"existingYes\"\r\n                                            className=\"form-check-input\"\r\n                                            name=\"existingNumber\"\r\n                                            checked={existingNumber}\r\n                                            onChange={() => setExistingNumber(true)}\r\n                                        />\r\n                                        <label className=\"form-check-label\" htmlFor=\"existingYes\">\r\n                                            Keep Existing Number\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            id=\"existingNo\"\r\n                                            className=\"form-check-input\"\r\n                                            name=\"existingNumber\"\r\n                                            checked={!existingNumber}\r\n                                            onChange={() => setExistingNumber(false)}\r\n                                        />\r\n                                        <label className=\"form-check-label\" htmlFor=\"existingNo\">\r\n                                            Need New Number\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <h4 className=\"mb-4 border-bottom pb-2\">Additional Services</h4>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-hover\">\r\n            <thead className=\"table-light\">\r\n              <tr>\r\n                <th>Service</th>\r\n                <th>Number of Users</th>\r\n                <th>Price per User<span className=\"text-danger\">*</span></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {[\r\n                { name: \"PSTN\", key: \"pstnCost\", price: 40 },\r\n                { name: \"ADSL 2+ Broadband Rental\", key: \"adslCost\", price: 33 },\r\n                { name: \"Call Recording per Extension\", key: \"callRecordingCost\", price: 5 },\r\n                { name: \"Annex M Broadband Rental\", key: \"annexRental\", price: 35 },\r\n                { name: \"Fax to Email\", key: \"faxToEmailCost\", price: 5 }\r\n              ].map((service) => (\r\n                <tr key={service.key}>\r\n                  <td>{service.name}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      className=\"form-control form-control-sm w-75\"\r\n                      value={additionalServices[service.key]}\r\n                      onChange={(e) => handleServiceChange(service.key, parseInt(e.target.value))}\r\n                    />\r\n                  </td>\r\n                  <td>£{service.price}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div> */}\r\n                        {/* <span><span className=\"text-danger\">*</span>Prices shown are exclusive of VAT.</span> */}\r\n\r\n                        <div className=\"text-center mt-4\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary btn-lg px-4 rounded-pill shadow-sm me-0 me-md-3 w-100 w-md-auto\"\r\n                            >\r\n                                Proceed to Address Details\r\n                            </button>\r\n                            {/* <button type=\"button\" onClick={handleSkip} className=\"btn btn-secondary btn-lg px-5 rounded-pill shadow-sm mx-2\">\r\n            Skip Additional Services\r\n          </button> */}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Configuration;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport \".././App.css\";\r\n\r\nconst ProtectedRoute = ({ component: Component, path, ...rest }) => {\r\n  const state = useSelector((state) => state);\r\n  const isLogged = state.loggedin.IsLoggedIn;\r\n  console.log(\"LoggedIn \", state.loggedin.IsLoggedIn)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isLogged ? (\r\n          <div className=\"main-container\">\r\n            <Component  {...props} path={path}/>\r\n          </div>\r\n        ) : (\r\n          <Redirect to=\"/clogin\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import api from \"../util/axiosConfig\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Billing.css\";\r\nimport ProgressBar from \"./ProgressBar.jsx\";\r\nimport axios from \"axios\";\r\n\r\nconst Billing = () => {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const state = useSelector((state) => state);\r\n  const [services, setServices] = useState({});\r\n  const [totalCost, setTotalCost] = useState(0);\r\n  const [address, setAddress] = useState({});\r\n  const [currentStep, setCurrentStep] = useState(4);\r\n  const [selectedPlan, setSelectedPlan] = useState({});\r\n\r\n  const activationCharge = 25;\r\n  const [totalActivationCharge, setTotalActivationCharge] =\r\n    useState(activationCharge);\r\n  const [monthlyCost, setMonthlyCost] = useState(0);\r\n  // Coupon\r\n  // const [coupons, setCoupons] = useState([]);\r\n  // const [showCouponModal, setShowCouponModal] = useState(false);\r\n  const [couponCode, setCouponCode] = useState(\"\");\r\n  const [selectedCoupon, setSelectedCoupon] = useState(null);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"Updated coupons state:\", coupons);\r\n  // }, [coupons]);\r\n\r\n  // Recalculate total cost when services, selectedPlan, or selectedCoupon changes\r\n  useEffect(() => {\r\n    calculateTotalCost();\r\n  }, [services, selectedCoupon, selectedPlan]);\r\n\r\n  const handleCouponSubmit = (e) => {\r\n    e.preventDefault();\r\n    api\r\n      .get(`/api/v1/coupon/${couponCode}`, config)\r\n      .then((resp) => {\r\n        if (resp.data) {\r\n          setSelectedCoupon(resp.data);\r\n          // swal({\r\n          //   title: \"Success\",\r\n          //   text: \"Coupon applied successfully!\",\r\n          //   icon: \"success\",\r\n          //   button: \"Ok\",\r\n          // });\r\n        } else {\r\n          swal({\r\n            title: \"Error\",\r\n            text: \"Invalid coupon code\",\r\n            icon: \"error\",\r\n            button: \"Ok\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching coupon:\", error);\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Failed to apply coupon\",\r\n          icon: \"error\",\r\n          button: \"Ok\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n\r\n  const calculateTotalCost = () => {\r\n    console.log('Calculating total cost...');\r\n    console.log('Services:', services);\r\n    console.log('Selected Plan:', selectedPlan);\r\n    console.log('Selected Coupon:', selectedCoupon);\r\n\r\n    let monthlyServices = 0; // Placeholder, calculate based on services if needed\r\n\r\n    let planCost = services.userCount && selectedPlan.cost\r\n      ? (selectedPlan.cost * services.userCount)\r\n      : 0;\r\n    planCost = Number(planCost.toFixed(2));\r\n\r\n    let temp = services.userCount\r\n      ? (activationCharge * services.userCount)\r\n      : 0;\r\n    temp = Number(temp.toFixed(2));\r\n\r\n    console.log('Initial calculations:', { planCost, temp });\r\n\r\n    // Apply coupon discount if any\r\n    if (selectedCoupon) {\r\n      if (selectedCoupon.activationDiscount) {\r\n        temp = Number((temp - (temp * selectedCoupon.activationDiscount) / 100).toFixed(2));\r\n      }\r\n      if (selectedCoupon.monthlyDiscount) {\r\n        planCost = Number((planCost - (planCost * selectedCoupon.monthlyDiscount) / 100).toFixed(2));\r\n      }\r\n    }\r\n\r\n    console.log('After coupon application:', { planCost, temp });\r\n\r\n    let total = ((monthlyServices + planCost + temp) * 1.2).toFixed(2);\r\n    total = Number(total);\r\n\r\n    console.log('Final calculations:', { monthlyServices, planCost, temp, total });\r\n\r\n    // Set state with calculated values\r\n    setMonthlyCost(planCost);\r\n    setTotalActivationCharge(temp);\r\n    setTotalCost(total);\r\n  };\r\n\r\n  // const fetchPackage = () => {\r\n  //   const packageName = localStorage.getItem(\"packageName\");\r\n  //   axios.get(`${process.env.REACT_APP_BASE_URL}/api/v1/products/get-package?packageName=${packageName}`)\r\n  //   .then((resp) => {\r\n  //     console.log(resp.data)\r\n  //     setSelectedPlan({\r\n  //       name: resp.data.packageName,\r\n  //       cost: (resp.data.cost).toFixed(2)\r\n  //     })\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     swal({\r\n  //       title: \"Error\",\r\n  //       text:  `Error fetching package details: ${+ error.message}`,\r\n  //       icon: \"error\",\r\n  //       button: \"ok\",\r\n  //     });\r\n  //   })\r\n  // }\r\n\r\n  const fetchPackage = () => {\r\n    const packageName = localStorage.getItem(\"packageName\") || \"basic\"; // Default value if packageName is null\r\n\r\n    if (!packageName) {\r\n      swal({\r\n        title: \"Error\",\r\n        text: \"Please select the package first\",\r\n        icon: \"error\",\r\n        button: \"ok\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/api/v1/products/get-package?packageName=${packageName}`)\r\n      .then((resp) => {\r\n        setSelectedPlan({\r\n          name: resp.data.packageName,\r\n          cost: resp.data.cost.toFixed(2), // Ensure cost is always a number\r\n        });\r\n        console.log(resp.data); // Logging response data\r\n      })\r\n      .catch((error) => {\r\n        swal({\r\n          title: \"Error\",\r\n          text: `Error fetching package details: ${error.message}`, // Correctly formatted error message\r\n          icon: \"error\",\r\n          button: \"ok\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const fetchAddress = () => {\r\n    api\r\n      .get(\"/api/v1/address\", config)\r\n      .then((resp) => {\r\n        console.log(resp.data);\r\n        setAddress(resp.data);\r\n        fetchPackage();\r\n        // fetchCoupons();\r\n      })\r\n      .catch((error) => {\r\n        swal({\r\n          title: \"Error\",\r\n          text: `Error fetching address: ${+ error.message}`,\r\n          icon: \"error\",\r\n          button: \"ok\",\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/api/v1/services\", config)\r\n      .then((resp) => {\r\n        console.log(resp.data);\r\n        setServices(resp.data.service);\r\n        fetchAddress();\r\n      })\r\n      .catch((error) => {\r\n        swal({\r\n          title: \"Error\",\r\n          text: `Error fetching services: ${+ error.message}`,\r\n          icon: \"error\",\r\n          button: \"ok\",\r\n        });\r\n      });\r\n  }, [state.loggedin.UserEmail]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const billingInfo = {\r\n      description: \"test description\",\r\n      amount: totalCost * 100,\r\n      monthlyCost: monthlyCost * 100,\r\n      currency: \"GBP\",\r\n      appFee: 500,\r\n      mandateScheme: \"bacs\",\r\n    };\r\n\r\n    api.post(\"/api/v1/mandate/billing\", billingInfo, config).then((resp) => {\r\n      console.log(resp.data);\r\n      window.location.href = resp.data.authorisationUrl;\r\n      setSubmitted(false);\r\n    });\r\n    if (currentStep < 4) {\r\n      setCurrentStep(currentStep + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-5 d-flex flex-column\">\r\n      <ProgressBar currentStep={currentStep} />\r\n      <div className=\"card shadow\">\r\n        {/* <div className=\"card-header bg-primary text-white py-3\">\r\n          <h3 className=\"mb-0\">Subscription Confirmation</h3>\r\n        </div> */}\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-8\">\r\n              <h4 className=\"mb-4 border-bottom pb-2\">Service Details</h4>\r\n              <div className=\"table-responsive mb-4\">\r\n                <table className=\"table table-hover\">\r\n                  <thead className=\"table-light\">\r\n                    <tr>\r\n                      <th>Service</th>\r\n                      <th>Number of users</th>\r\n                      <th>Price per user</th>\r\n                      <th>\r\n                        Total<span className=\"text-danger\">*</span>\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr className=\"table-primary\">\r\n                      <td>\r\n                        <strong>{selectedPlan.name} Plan</strong>\r\n                      </td>\r\n                      <td>{services.userCount}</td>\r\n                      <td>£{selectedPlan.cost}</td>\r\n                      <td>\r\n                        <strong>\r\n                          £{(selectedPlan.cost * services.userCount).toFixed(2)}\r\n                        </strong>\r\n                      </td>\r\n                    </tr>\r\n                    {/* <tr>\r\n                      <td>PSTN Users</td>\r\n                      <td>{services.pstnCost}</td>\r\n                      <td>£40</td>\r\n                      <td>£{services.pstnCost * 40}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>ADSL 2+ Broadband Rental</td>\r\n                      <td>{services.adslCost}</td>\r\n                      <td>£33</td>\r\n                      <td>£{services.adslCost * 33}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Call Recording Extensions</td>\r\n                      <td>{services.callRecordingCost}</td>\r\n                      <td>£5</td>\r\n                      <td>£{services.callRecordingCost * 5}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Annex M Broadband Rental</td>\r\n                      <td>{services.annexRental}</td>\r\n                      <td>£35</td>\r\n                      <td>£{services.annexRental * 35}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Fax to Email</td>\r\n                      <td>{services.faxToEmailCost}</td>\r\n                      <td>£5</td>\r\n                      <td>£{services.faxToEmailCost * 5}</td>\r\n                    </tr> */}\r\n                    <tr className=\"table-info\">\r\n                      <td>\r\n                        <strong>Activation Charge</strong>\r\n                      </td>\r\n                      <td>{services.userCount}</td>\r\n                      <td>£{activationCharge}/user</td>\r\n                      <td>\r\n                        <strong>\r\n                          £{activationCharge * services.userCount}\r\n                        </strong>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <div className=\"discount mt-4\">\r\n                  <form onSubmit={handleCouponSubmit}>\r\n                    <div className=\"input-group mb-3\">\r\n                      <div className=\"mr-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          style={{ marginBottom: \"0px\" }}\r\n                          placeholder=\"Enter coupon code\"\r\n                          value={couponCode}\r\n                          onChange={(e) => setCouponCode(e.target.value)}\r\n                        />\r\n                      </div>\r\n\r\n                      <button className=\"btn btn-primary\" type=\"submit\" style={{ marginTop: \"0px\" }}>\r\n                        Apply Coupon\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                  {selectedCoupon && (\r\n                    <div className=\"alert alert-success\">\r\n                      <strong>Applied Coupon:</strong> {selectedCoupon.name} -{\" \"}\r\n                      {selectedCoupon.description}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <span>\r\n                  <span className=\"text-danger\">*</span>The total payable amount\r\n                  will include a 20% VAT.\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-4\">\r\n              <h4 className=\"mb-4 border-bottom pb-2\">Address Information</h4>\r\n              <div className=\"card mb-4\">\r\n                <div className=\"card-header bg-primary text-white\">\r\n                  <h6 className=\"mb-0\">Company Address</h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <address className=\"mb-0\">\r\n                    {address.company_address && (\r\n                      <Fragment>\r\n                        {[\r\n                          address.company_address.line_1,\r\n                          address.company_address.line_2,\r\n                          address.company_address.city,\r\n                          address.company_address.district,\r\n                          address.company_address.county,\r\n                          address.company_address.post_code,\r\n                          address.company_address.country,\r\n                        ]\r\n                          .filter(Boolean)\r\n                          .join(\", \")}\r\n                      </Fragment>\r\n                    )}\r\n                  </address>\r\n                </div>\r\n              </div>\r\n              <div className=\"card\">\r\n                <div className=\"card-header bg-primary text-white\">\r\n                  <h6 className=\"mb-0\">Billing Address</h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <address className=\"mb-0\">\r\n                    {address.billing_address && (\r\n                      <Fragment>\r\n                        {[\r\n                          address.billing_address.line_1,\r\n                          address.billing_address.line_2,\r\n                          address.billing_address.city,\r\n                          address.billing_address.district,\r\n                          address.billing_address.county,\r\n                          address.billing_address.post_code,\r\n                          address.billing_address.country,\r\n                        ]\r\n                          .filter(Boolean)\r\n                          .join(\", \")}\r\n                      </Fragment>\r\n                    )}\r\n                  </address>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row mt-4\">\r\n            <div className=\"col-12\">\r\n              <div className=\"card bg-light border-0 shadow-sm\">\r\n                <div className=\"card-body\">\r\n                  {/* <h4 className=\"card-title mb-4 text-primary\">Cost Summary</h4> */}\r\n                  <div className=\"row g-4 d-flex justify-content-center\">\r\n                    <div className=\"col-md-3\">\r\n                      <div className=\"p-3 bg-white rounded shadow-sm\">\r\n                        <h6 className=\"text-muted mb-2\">Monthly Cost</h6>\r\n                        <p className=\"h3 mb-0 text-primary\">£{monthlyCost}</p>\r\n                      </div>\r\n                    </div>\r\n                    {/* <div className=\"col-md-3\">\r\n                      <div className=\"p-3 bg-white rounded shadow-sm\">\r\n                        <h6 className=\"text-muted mb-2\">Plan Cost</h6>\r\n                        <p className=\"h3 mb-0 text-primary\">£{selectedPlan.price * services.userCount}</p>\r\n                      </div>\r\n                    </div> */}\r\n                    <div className=\"col-md-3\">\r\n                      <div className=\"p-3 bg-white rounded shadow-sm\">\r\n                        <h6 className=\"text-muted mb-2\">Activation Charge</h6>\r\n                        <p className=\"h3 mb-0 text-primary\">\r\n                          £{totalActivationCharge}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <div className=\"p-3 bg-primary text-white rounded shadow\">\r\n                        <h6 className=\"mb-2\">Total Amount</h6>\r\n                        <p className=\"h2 mb-0 font-weight-bold\">£{totalCost}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer bg-light text-center py-4\">\r\n          <button\r\n            className=\"btn btn-primary btn-lg px-5 rounded-pill shadow-sm\"\r\n            onClick={handleSubmit}\r\n          >\r\n            <i className=\"bi bi-credit-card me-2\"></i>Proceed to Payment\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Billing;","import React from 'react'\r\n\r\nfunction PaymentFailure() {\r\n    return (\r\n        <div style={styles.container}>\r\n            <div className=\"card\" style={styles.card}>\r\n                <div className=\"card-body text-center\">\r\n                    <div className=\"d-flex justify-content-center align-items-center\" style={styles.iconContainer}>\r\n                        <div className=\"checkmark\" style={styles.checkmark}>\r\n                        😔\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"card-title\" style={styles.title}>Payment Unsuccessful</p>\r\n                    <p className=\"card-text\" style={styles.text}>\r\n                        Your transaction could not be processed. Please try again later or contact support.\r\n                    </p>\r\n                    <a href=\"/\" className=\"btn btn-primary\" style={styles.button}>\r\n                        Go to Profile\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        height: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#e6f7ff',\r\n    },\r\n    card: {\r\n        maxWidth: '400px',\r\n        borderRadius: '10px',\r\n        border: 'none',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n        animation: 'fadeIn 1s ease-in-out',\r\n    },\r\n    iconContainer: {\r\n        width: '100px',\r\n        height: '100px',\r\n        backgroundColor: '#f8d7da',\r\n        borderRadius: '50%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: '0 auto 20px',\r\n        animation: 'bounceIn 1s ease-in-out',\r\n    },\r\n    checkmark: {\r\n        fontSize: '48px',\r\n        color: '#155724',\r\n    },\r\n    title: {\r\n        fontSize: '24px',\r\n        color: '#721c24',\r\n        marginBottom: '15px',\r\n    },\r\n    text: {\r\n        fontSize: '16px',\r\n        color: '#721c24',\r\n        marginBottom: '30px',\r\n    },\r\n    button: {\r\n        backgroundColor: '#007bff',\r\n        borderColor: '#007bff',\r\n    },\r\n    '@keyframes fadeIn': {\r\n        from: { opacity: 0 },\r\n        to: { opacity: 1 },\r\n    },\r\n    '@keyframes bounceIn': {\r\n        '0%, 20%, 40%, 60%, 80%, 100%': {\r\n            transform: 'translateY(0)',\r\n        },\r\n        '50%': {\r\n            transform: 'translateY(-20px)',\r\n        },\r\n    },\r\n};\r\n\r\nexport default PaymentFailure\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction PaymentSuccess() {\r\n    const state = useSelector((state) => state);\r\n\r\n    // const cart = [];\r\n    useEffect(()=>{\r\n        localStorage.setItem('cart', JSON.stringify([]));\r\n    },[state.cart])\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div className=\"card\" style={styles.card}>\r\n        <div className=\"card-body text-center\">\r\n          <div className=\"d-flex justify-content-center align-items-center\" style={styles.iconContainer}>\r\n            <div className=\"checkmark\" style={styles.checkmark}>\r\n              😄\r\n            </div>\r\n          </div>\r\n          <h1 className=\"card-title\" style={styles.title}>Payment Successful!</h1>\r\n          <p className=\"card-text\" style={styles.text}>\r\n            Thank you for your payment. Your transaction has been completed successfully.\r\n          </p>\r\n          <a href=\"/product\" className=\"btn btn-primary\" style={styles.button}>\r\n            Explore wide range of products\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    height: '100vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#e6f7ff',\r\n  },\r\n  card: {\r\n    maxWidth: '400px',\r\n    borderRadius: '10px',\r\n    border: 'none',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n    animation: 'fadeIn 1s ease-in-out',\r\n  },\r\n  iconContainer: {\r\n    width: '100px',\r\n    height: '100px',\r\n    backgroundColor: '#d1ecf1',\r\n    borderRadius: '50%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    margin: '0 auto 20px',\r\n    animation: 'bounceIn 1s ease-in-out',\r\n  },\r\n  checkmark: {\r\n    fontSize: '48px',\r\n    color: '#155724',\r\n  },\r\n  title: {\r\n    fontSize: '24px',\r\n    color: '#004085',\r\n    marginBottom: '15px',\r\n  },\r\n  text: {\r\n    fontSize: '16px',\r\n    color: '#5a6268',\r\n    marginBottom: '30px',\r\n  },\r\n  button: {\r\n    backgroundColor: '#007bff',\r\n    borderColor: '#007bff',\r\n  },\r\n  '@keyframes fadeIn': {\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n  },\r\n  '@keyframes bounceIn': {\r\n    '0%, 20%, 40%, 60%, 80%, 100%': {\r\n      transform: 'translateY(0)',\r\n    },\r\n    '50%': {\r\n      transform: 'translateY(-20px)',\r\n    },\r\n  },\r\n};\r\n\r\nexport default PaymentSuccess;\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nfunction ResetPassword() {\r\n\r\n    const [data, setData] = useState({\r\n        password: \"\",\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const handleChange = (e) => {\r\n        const value = e.target.value;\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: value,\r\n        });\r\n    };\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // const userData = {\r\n        //   password: password,\r\n        // };\r\n\r\n        axios.post(`${process.env.REACT_APP_BASE_URL}/api/v1/auth/forgot-password`, data)\r\n            .then((response) => {\r\n                console.log(response);\r\n                JSON.stringify(response);\r\n                swal({\r\n                    title: \"Success\",\r\n                    text: \"Password has been successfully updated\",\r\n                    icon: \"success\",\r\n                    button: \"OK\",\r\n                }).then(() => {\r\n                    history.push(\"/clogin\");\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                swal({\r\n                    title: \"Error\",\r\n                    text: \"Error occured\",\r\n                    icon: \"error\",\r\n                    button: \"OK\",\r\n                }).then(() => {\r\n                    history.push(\"/forgotPassword\");\r\n                });;\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container d-flex justify-content-center align-items-center vh-100\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 d-flex justify-content-center align-items-center\">\r\n                    <img\r\n                        src=\"https://via.placeholder.com/600x800\"\r\n                        alt=\"login\"\r\n                        className=\"img-fluid\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"card p-4\">\r\n                        <h2 className=\"text-center mb-4\">Forgot Password</h2>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Enter new Password</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"password\"\r\n                                    onChange={handleChange}\r\n                                    className=\"form-control mt-1\"\r\n                                    placeholder=\"Please Enter new password\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Confirm new password</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"confirmPassword\"\r\n                                    onChange={handleChange}\r\n                                    className=\"form-control mt-1\"\r\n                                    placeholder=\"Please confirm new password\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-block mt-4\">\r\n                                Reset Password\r\n                            </button>\r\n                            <div className=\"text-center mt-3\">\r\n                                <Link to=\"/clogin\">Back to Login</Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport api from \"../util/axiosConfig.js\"\r\nimport ProgressBar from \"./ProgressBar.jsx\";\r\nimport axios from \"axios\";\r\n\r\nconst Address = () => {\r\n  const apiKey = \"CvmjTpTwWUedB8nNMCKxXQ43497\";\r\n\r\n  const [companyPostcode, setCompanyPostcode] = useState(\"\");\r\n  const [companyPostcodeSuggestions, setCompanyPostcodeSuggestions] = useState(\r\n    []\r\n  );\r\n\r\n  const [billingPostcode, setBillingPostcode] = useState(\"\");\r\n  const [billingPostcodeSuggestions, setBillingPostcodeSuggestions] = useState(\r\n    []\r\n  );\r\n\r\n  const [deliveryPostcode, setDeliveryPostcode] = useState(\"\");\r\n  const [deliveryPostcodeSuggestions, setDeliveryPostcodeSuggestions] =\r\n    useState([]);\r\n\r\n  const [address, setAddress] = useState({\r\n    company_address: {\r\n      line_1: \"\",\r\n      line_2: \"\",\r\n      city: \"\",\r\n      district: \"\",\r\n      county: \"\",\r\n      country: \"\",\r\n      post_code: \"\",\r\n    },\r\n    billing_address: {\r\n      line_1: \"\",\r\n      line_2: \"\",\r\n      city: \"\",\r\n      district: \"\",\r\n      county: \"\",\r\n      country: \"\",\r\n      post_code: \"\",\r\n    },\r\n    delivery_address: {\r\n      line_1: \"\",\r\n      line_2: \"\",\r\n      city: \"\",\r\n      district: \"\",\r\n      county: \"\",\r\n      country: \"\",\r\n      post_code: \"\",\r\n    },\r\n  });\r\n\r\n  const state = useSelector((state) => state);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [sameAsShipping, setSameAsShipping] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(3);\r\n  const history = useHistory();\r\n\r\n  const handleAddressInput = (e, type) => {\r\n    const { name, value } = e.target;\r\n    setAddress((prevAddress) => ({\r\n      ...prevAddress,\r\n      [type]: {\r\n        ...prevAddress[type],\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleCheckboxChange = () => {\r\n    setSameAsShipping(!sameAsShipping);\r\n    if (!sameAsShipping) {\r\n      setAddress((prevAddress) => ({\r\n        ...prevAddress,\r\n        billing_address: { ...prevAddress.company_address },\r\n      }));\r\n    } else {\r\n      setAddress((prevAddress) => ({\r\n        ...prevAddress,\r\n        billing_address: {\r\n          line_1: \"\",\r\n          line_2: \"\",\r\n          city: \"\",\r\n          district: \"\",\r\n          county: \"\",\r\n          country: \"\",\r\n          post_code: \"\",\r\n        },\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSuggestionClick = async (suggestion, type) => {\r\n    const { address, url, id } = suggestion;\r\n    const getAddressUrl = `https://api.getAddress.io/get/${id}?api-key=${apiKey}`;\r\n\r\n    axios.get(getAddressUrl).then((resp) => {\r\n      const addressDetails = resp.data;\r\n\r\n      setAddress((prevAddress) => ({\r\n        ...prevAddress,\r\n        [type]: {\r\n          ...prevAddress[type],\r\n          line_1: addressDetails.line_1,\r\n          line_2: addressDetails.line_2,\r\n          city: addressDetails.town_or_city,\r\n          district: addressDetails.county,\r\n          county: addressDetails.county,\r\n          country: addressDetails.country,\r\n          post_code: addressDetails.postcode,\r\n        },\r\n      }));\r\n\r\n      // Clear the suggestions for the corresponding address\r\n      if (type === \"company_address\") {\r\n        setCompanyPostcodeSuggestions([]);\r\n      } else if (type === \"billing_address\") {\r\n        setBillingPostcodeSuggestions([]);\r\n      } else if (type === \"delivery_address\") {\r\n        setDeliveryPostcodeSuggestions([]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true); // set true\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    if (submitted && address) {\r\n      api\r\n        .post(\"api/v1/address\", { address })\r\n        .then((resp) => {\r\n          if (isMounted) {\r\n            swal({\r\n              title: \"Success\",\r\n              text: \"Services added successfully\",\r\n              icon: \"success\",\r\n              button: \"ok\",\r\n            });\r\n            history.push(\"/billing\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (isMounted) {\r\n            console.error(\"API call error:\", error);\r\n            swal({\r\n              title: \"Error\",\r\n              text: error.message,\r\n              icon: \"error\",\r\n              button: \"ok\",\r\n            });\r\n          }\r\n        })\r\n        .finally(() => {\r\n          if (isMounted) {\r\n            setSubmitted(false); // Reset submission state\r\n          }\r\n        });\r\n    } else {\r\n      console.log(\"Errors detected, not making API call\");\r\n    }\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [submitted, address, history]);\r\n\r\n  //TEST\r\n\r\n  const callApi = (searchText, type) => {\r\n    const url = `https://api.getAddress.io/autocomplete/${searchText}?api-key=${apiKey}`;\r\n\r\n    axios\r\n      .get(url)\r\n      .then((resp) => {\r\n        if (type === \"company_address\") {\r\n          setCompanyPostcodeSuggestions(resp.data.suggestions);\r\n        } else if (type === \"billing_address\") {\r\n          setBillingPostcodeSuggestions(resp.data.suggestions);\r\n        } else if (type === \"delivery_address\") {\r\n          setDeliveryPostcodeSuggestions(resp.data.suggestions);\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let delay;\r\n\r\n    if (companyPostcode) {\r\n      delay = setTimeout(() => {\r\n        callApi(companyPostcode, \"company_address\");\r\n      }, 1000);\r\n    }\r\n\r\n    return () => clearTimeout(delay);\r\n  }, [companyPostcode]);\r\n\r\n  useEffect(() => {\r\n    let delay;\r\n\r\n    if (billingPostcode) {\r\n      delay = setTimeout(() => {\r\n        callApi(billingPostcode, \"billing_address\");\r\n      }, 1000);\r\n    }\r\n\r\n    return () => clearTimeout(delay);\r\n  }, [billingPostcode]);\r\n\r\n  useEffect(() => {\r\n    let delay;\r\n\r\n    if (deliveryPostcode) {\r\n      delay = setTimeout(() => {\r\n        callApi(deliveryPostcode, \"delivery_address\");\r\n      }, 1000);\r\n    }\r\n\r\n    return () => clearTimeout(delay);\r\n  }, [deliveryPostcode]);\r\n\r\n  return (\r\n    <div className=\"container py-5 d-flex flex-column justify-content-center\">\r\n      <ProgressBar currentStep={currentStep} />\r\n      <div className=\"card mt-2\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"card-subtitle mb-1 text-center\">\r\n                Company Address\r\n              </h5>\r\n              <div className=\"form-group position-relative\">\r\n                <label>Postcode</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  onChange={(e) => setCompanyPostcode(e.target.value)}\r\n                  required\r\n                />\r\n                {companyPostcodeSuggestions.length > 0 && (\r\n                  <ul\r\n                    className=\"list-group position-absolute w-100\"\r\n                    style={{ zIndex: \"99\" }}\r\n                  >\r\n                    {companyPostcodeSuggestions.map((suggestion, index) => (\r\n                      <li\r\n                        key={index}\r\n                        className=\"list-group-item\"\r\n                        onClick={() =>\r\n                          handleSuggestionClick(suggestion, \"company_address\")\r\n                        }\r\n                      >\r\n                        {suggestion.address}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n              {[\r\n                \"line_1\",\r\n                \"line_2\",\r\n                \"city\",\r\n                \"district\",\r\n                \"county\",\r\n                \"country\",\r\n                \"post_code\",\r\n              ].map((field) => (\r\n                <div className=\"form-group\" key={field}>\r\n                  <label>\r\n                    {field.charAt(0).toUpperCase() + field.slice(1)}\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name={field}\r\n                    value={address.company_address[field]}\r\n                    onChange={(e) => handleAddressInput(e, \"company_address\")}\r\n                    required\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"card-subtitle mb-1 text-center\">\r\n                Billing Address\r\n              </h5>\r\n              <div className=\"form-group position-relative\">\r\n                <label>Postcode</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  onChange={(e) => setBillingPostcode(e.target.value)}\r\n                  required\r\n                />\r\n                {billingPostcodeSuggestions.length > 0 && (\r\n                  <ul\r\n                    className=\"list-group position-absolute w-100\"\r\n                    style={{ zIndex: \"99\" }}\r\n                  >\r\n                    {billingPostcodeSuggestions.map((suggestion, index) => (\r\n                      <li\r\n                        key={index}\r\n                        className=\"list-group-item\"\r\n                        onClick={() =>\r\n                          handleSuggestionClick(suggestion, \"billing_address\")\r\n                        }\r\n                      >\r\n                        {suggestion.address}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n              {[\r\n                \"line_1\",\r\n                \"line_2\",\r\n                \"city\",\r\n                \"district\",\r\n                \"county\",\r\n                \"country\",\r\n                \"post_code\",\r\n              ].map((field) => (\r\n                <div className=\"form-group\" key={field}>\r\n                  <label>\r\n                    {field.charAt(0).toUpperCase() + field.slice(1)}\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name={field}\r\n                    value={address.billing_address[field]}\r\n                    onChange={(e) => handleAddressInput(e, \"billing_address\")}\r\n                    disabled={sameAsShipping}\r\n                    required\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"card-subtitle mb-1 text-center\">\r\n                Delivery Address\r\n              </h5>\r\n              <div className=\"form-group position-relative\">\r\n                <label>Postcode</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  onChange={(e) => setDeliveryPostcode(e.target.value)}\r\n                  required\r\n                />\r\n                {deliveryPostcodeSuggestions.length > 0 && (\r\n                  <ul\r\n                    className=\"list-group position-absolute w-100\"\r\n                    style={{ zIndex: \"99\" }}\r\n                  >\r\n                    {deliveryPostcodeSuggestions.map((suggestion, index) => (\r\n                      <li\r\n                        key={index}\r\n                        className=\"list-group-item\"\r\n                        onClick={() =>\r\n                          handleSuggestionClick(suggestion, \"delivery_address\")\r\n                        }\r\n                      >\r\n                        {suggestion.address}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n              {[\r\n                \"line_1\",\r\n                \"line_2\",\r\n                \"city\",\r\n                \"district\",\r\n                \"county\",\r\n                \"country\",\r\n                \"post_code\",\r\n              ].map((field) => (\r\n                <div className=\"form-group\" key={field}>\r\n                  <label>\r\n                    {field.charAt(0).toUpperCase() + field.slice(1)}\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name={field}\r\n                    value={address.delivery_address[field]}\r\n                    onChange={(e) => handleAddressInput(e, \"delivery_address\")}\r\n                    disabled={sameAsShipping}\r\n                    required\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id=\"sameAsShipping\"\r\n              checked={sameAsShipping}\r\n              onChange={handleCheckboxChange}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"sameAsShipping\">\r\n              Company address same as shipping address\r\n            </label>\r\n          </div>\r\n          {/* <button type=\"button\" className=\"btn btn-primary\" onClick={handleSubmit}>\r\n                        Proceed\r\n                    </button> */}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-danger btn-block\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Proceed\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Address;","import React from 'react';\r\nimport './App.css';\r\nimport RegSupplier from './components/RegSupplier';\r\nimport NavBar from './components/NavBar';\r\nimport RegCustomer from './components/RegCustomer';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport AdminLogin from './components/AdminLogin';\r\nimport AdminProfile from './components/AdminProfile';\r\nimport AllCustomers from './components/AllCustomers';\r\nimport AllSellers from './components/AllSellers';\r\nimport SellerLogin from './components/SellerLogin';\r\nimport CustomerLogin from './components/CustomerLogin';\r\nimport SellerProfile from './components/SellerProfile';\r\nimport AddProduct from './components/AddProduct';\r\nimport MyProducts from './components/MyProducts';\r\nimport AllProduct from './components/AllProducts';\r\nimport EditProduct from './components/EditProduct';\r\nimport CustomerProfile from './components/CustomerProfile';\r\nimport MyOrders from './components/MyOrders';\r\nimport Orders from './components/Orders';\r\nimport ViewCart from './components/ViewCart';\r\nimport ForgotPassword from './components/ForgotPassword';\r\nimport Footer from \"./components/Footer.jsx\";\r\nimport Address from './components/Address';\r\nimport Configuration from './components/Configuration.jsx';\r\nimport ProtectedRoute from './util/ProtectedRoutes.jsx';\r\nimport Billing from './components/Billing.jsx';\r\nimport PaymentFailure from './components/PaymentFailure.jsx';\r\nimport PaymentSuccess from './components/PaymentSuccess.jsx';\r\nimport ResetPassword from './components/ResetPassword.jsx';\r\nimport AddressPage from './components/AddressPage.jsx';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <div className=\"justify-content-around\">\r\n          <NavBar />\r\n        </div>\r\n\r\n        <div className=\"content min_height\">\r\n          <Switch>\r\n            <Route component={RegCustomer} path=\"/register\" />\r\n            <Route component={CustomerLogin} path=\"/clogin\" />\r\n            <Route component={ForgotPassword} path=\"/forgotPassword\" />\r\n            <Route component={ResetPassword} path=\"/resetPassword\" />\r\n            <Route component={CustomerLogin} path=\"/\" exact />\r\n            <ProtectedRoute component={AllProduct} path=\"/product\" />\r\n            <ProtectedRoute component={AllProduct} path=\"/cat/:pcat/:subcat\" />\r\n            <ProtectedRoute component={CustomerProfile} path=\"/cprofile\" />\r\n            <ProtectedRoute component={MyProducts} path=\"/myproducts\" />\r\n            <ProtectedRoute component={MyOrders} path=\"/myorders\" />\r\n            <ProtectedRoute component={Billing} path=\"/billing\" />\r\n            <ProtectedRoute component={Orders} path=\"/orders\" />\r\n            <ProtectedRoute component={ViewCart} path=\"/cart\" />\r\n            <ProtectedRoute component={Address} path=\"/address\" />\r\n            <ProtectedRoute component={AddressPage} path=\"/addressPage\" />\r\n            <ProtectedRoute component={Configuration} path=\"/configuration\" />\r\n            <ProtectedRoute component={PaymentSuccess} path=\"/PaymentSuccess\" />\r\n            <ProtectedRoute component={PaymentFailure} path=\"/PaymentFailure\" />\r\n            {/* <ProtectedRoute component={AdminLogin} path=\"/alogin\" /> */}\r\n            {/* <ProtectedRoute component={AdminProfile} path=\"/aprofile\" /> */}\r\n            {/* <ProtectedRoute component={AllCustomers} path=\"/customers\" /> */}\r\n            {/* <ProtectedRoute component={AddProduct} path=\"/add-product\" /> */}\r\n            {/* <ProtectedRoute component={EditProduct} path=\"/edit/:prodid\" /> */}\r\n          </Switch>\r\n        </div>\r\n        <Footer />\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = [];\r\n\r\nconst cartitemsreducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'AddItem':   \r\n            return [...state, action.payload];\r\n        case 'RemoveItem':\r\n            return state.filter(x => x.item !== action.payload.item);\r\n        case 'Clear':\r\n            return [];\r\n        case 'InitializeCart': // New action type to initialize cart\r\n            return action.payload; // Payload should be array of cart items from localStorage\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartitemsreducer;\r\n","import {jwtDecode} from 'jwt-decode';\n\nconst getUserFromToken = () => {\n    const token = localStorage.getItem('access_token');\n    if (!token) return null;\n    \n    try {\n        const decodedToken = jwtDecode(token);\n        return {\n            userEmail: decodedToken.userId,\n            username: decodedToken.username,\n            role: decodedToken.role\n        };\n    } catch (error) {\n        console.error('Invalid token', error);\n        return null;\n    }\n};\n\n\n\nconst initialState = (() => {\n    const user = getUserFromToken();\n    return {\n        IsLoggedIn: user !== null,\n        Username: user ? user.username : '',\n        UserEmail: user ? user.userEmail : '',\n        Role: user ? user.role : ''\n    };\n})();\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'IsLoggedIn':\n            const user = getUserFromToken();\n            return {\n                ...state,\n                IsLoggedIn: true,\n                Username: user.username,\n                UserEmail: user.userEmail,\n                Role: user.role\n            };\n        case 'LogOut':\n            localStorage.removeItem('access_token');\n            localStorage.removeItem('refresh_token');\n            return { ...state, IsLoggedIn: false, Username: '', Role: '' , UserEmail: ''};\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { combineReducers, createStore } from 'redux';\nimport cartitemsreducer from './cartitemsreducer';\nimport reducer from './reducer';\n\n// Initialize the cart in localStorage if it doesn't exist\nif (!localStorage.getItem('cart')) {\n    localStorage.setItem('cart', JSON.stringify([]));\n}\n\n// Load cart items from localStorage\nconst savedCart = JSON.parse(localStorage.getItem('cart'));\n\n// Define the initializeCart action\nconst initializeCart = (cartItems) => ({\n    type: 'InitializeCart',\n    payload: cartItems,\n});\n\n// Combine reducers\nconst combreducer = combineReducers({\n    loggedin: reducer,\n    cart: cartitemsreducer,\n});\n\n// Create the store\nconst store = createStore(combreducer);\n\n// Dispatch the initializeCart action with the saved cart items\nstore.dispatch(initializeCart(savedCart));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { GoogleOAuthProvider } from \"@react-oauth/google\";\n\nconst clientId = process.env.REACT_APP_GOOGLE_KEY;\n\nReactDOM.render(\n  <GoogleOAuthProvider clientId = {clientId} >\n    <React.StrictMode>\n      {console.table(store)}\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </GoogleOAuthProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","module.exports = __webpack_public_path__ + \"static/media/Pinevox-Horizontal.9f6283f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/LoginPageImg.3954ec80.png\";","module.exports = __webpack_public_path__ + \"static/media/PineVox-Horizontal-bw.f795a094.svg\";"],"sourceRoot":""}